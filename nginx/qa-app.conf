# QAAPP Nginx 反向代理配置
# 支持 HTTPS、WebSocket、和负载均衡

upstream qa_api {
    server 127.0.0.1:3001;
    keepalive 32;
}

upstream qa_web {
    server 127.0.0.1:3002;
    keepalive 32;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name qa-app.com www.qa-app.com api.qa-app.com;
    return 301 https://$server_name$request_uri;
}

# API Server (api.qa-app.com)
server {
    listen 443 ssl http2;
    server_name api.qa-app.com;

    # SSL 配置
    ssl_certificate /etc/ssl/certs/qa-app.com.crt;
    ssl_certificate_key /etc/ssl/private/qa-app.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 24h;

    # 安全头
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # API 路由
    location / {
        proxy_pass http://qa_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        
        # CORS 头（如果需要）
        add_header Access-Control-Allow-Origin "https://qa-app.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
    }

    # 健康检查端点
    location /health {
        proxy_pass http://qa_api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }

    # WebSocket 支持
    location /socket.io/ {
        proxy_pass http://qa_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 限制请求体大小
    client_max_body_size 10m;
}

# Web Application (qa-app.com, www.qa-app.com)
server {
    listen 443 ssl http2;
    server_name qa-app.com www.qa-app.com;

    # SSL 配置
    ssl_certificate /etc/ssl/certs/qa-app.com.crt;
    ssl_certificate_key /etc/ssl/private/qa-app.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 24h;

    # 安全头
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;

    # Next.js 静态资源缓存
    location /_next/static/ {
        proxy_pass http://qa_web;
        proxy_cache_valid 200 365d;
        add_header Cache-Control "public, immutable";
    }

    # Web 应用路由
    location / {
        proxy_pass http://qa_web;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # 限制请求体大小
    client_max_body_size 10m;
}

# 日志配置
error_log /var/log/nginx/qa-app-error.log warn;
access_log /var/log/nginx/qa-app-access.log combined;

## 🔧 配置说明