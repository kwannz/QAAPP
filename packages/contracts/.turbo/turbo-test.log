
> @qa-app/contracts@1.0.0 test /Users/zhaoleon/Desktop/QAapp/packages/contracts
> hardhat test

 ·------------------------|--------------------------------|--------------------------------·
 |  Solc version: 0.8.24  ·  Optimizer enabled: true       ·  Runs: 200                     │
 ·························|································|·································
 |  Contract Name         ·  Deployed size (KiB) (change)  ·  Initcode size (KiB) (change)  │
 ·························|································|·································
 |  Address               ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  Arrays                ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  Comparators           ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  ERC1155Utils          ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  ERC1967Utils          ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  Errors                ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  Math                  ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  MockUSDT              ·                 3.636 (0.000)  ·                 4.654 (0.000)  │
 ·························|································|·································
 |  Panic                 ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  QACard                ·                16.948 (0.000)  ·                16.995 (0.000)  │
 ·························|································|·································
 |  SafeCast              ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  SafeERC20             ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  SlotDerivation        ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  StorageSlot           ·                 0.057 (0.000)  ·                 0.085 (0.000)  │
 ·························|································|·································
 |  Treasury              ·                15.344 (0.000)  ·                15.391 (0.000)  │
 ·························|································|·································
 |  YieldDistributor      ·                 9.869 (0.000)  ·                 9.912 (0.000)  │
 ·------------------------|--------------------------------|--------------------------------·


  Contract Integration Tests
    End-to-End Product Purchase Flow
      ✔ Should complete full purchase flow with NFT minting
      ✔ Should handle multiple users purchasing different products
      ✔ Should allow users to purchase multiple products
      ✔ Should allow users to purchase same product multiple times
    Withdrawal and Treasury Management
      ✔ Should allow owner to withdraw funds within daily limit
      ✔ Should prevent withdrawal exceeding daily limit
      ✔ Should allow operator to update withdrawal limits
      ✔ Should handle emergency withdrawal correctly
    Batch Operations
      ✔ Should handle batch deposits efficiently
      ✔ Should allow batch NFT operations
    Error Handling and Edge Cases
      ✔ Should handle insufficient USDT balance gracefully
      ✔ Should handle insufficient allowance gracefully
      ✔ Should prevent unauthorized operations
      ✔ Should handle contract pausing correctly
    Complex Scenario Tests
      ✔ Should handle high-volume trading scenario
      ✔ Should maintain consistency under rapid operations
      ✔ Should handle mixed product purchases and transfers
    Gas Efficiency in Integration
      ✔ Should optimize gas usage in end-to-end flow
      ✔ Should batch operations more efficiently than individual ones
    System Resilience
      ✔ Should handle contract upgrade scenarios
      ✔ Should maintain data integrity during emergency operations

  MockUSDT Contract
    Deployment and Initial State
      ✔ Should set the correct name
      ✔ Should set the correct symbol
      ✔ Should set the correct decimals
      ✔ Should set the correct initial supply
      ✔ Should assign initial supply to owner
      ✔ Should set the correct owner
      ✔ Should initialize with correct total supply
    Standard ERC20 Functionality
      Transfers
        ✔ Should transfer tokens between accounts
        ✔ Should fail when sender doesn't have enough balance
        ✔ Should fail when transferring to zero address
        ✔ Should handle zero amount transfers
        ✔ Should handle self transfers
      Allowances
        ✔ Should approve spender for specific amount
        ✔ Should allow spender to transfer approved amount
        ✔ Should fail when spender tries to transfer more than approved
        ✔ Should handle infinite approval correctly
        ✔ Should allow increasing allowance
        ✔ Should allow decreasing allowance
        ✔ Should fail when decreasing allowance below zero
    Minting Functionality
      ✔ Should allow owner to mint tokens
      ✔ Should not allow non-owner to mint tokens
      ✔ Should not allow minting to zero address
      ✔ Should handle minting zero amount
      ✔ Should handle large minting amounts
    Burning Functionality
      ✔ Should allow owner to burn tokens from any address
      ✔ Should not allow non-owner to burn tokens
      ✔ Should fail when burning more than balance
      ✔ Should fail when burning from zero address
      ✔ Should handle burning zero amount
    Access Control
      ✔ Should allow owner to transfer ownership
      ✔ Should not allow non-owner to transfer ownership
      ✔ Should allow owner to renounce ownership
      ✔ Should not allow transferring ownership to zero address directly
    Security Tests
      ✔ Should prevent integer overflow in transfers
      ✔ Should prevent integer overflow in approvals
      ✔ Should handle edge cases in allowance operations
      ✔ Should prevent reentrancy attacks
      ✔ Should prevent unauthorized minting by attackers
      ✔ Should prevent unauthorized burning by attackers
    Gas Optimization
      ✔ Should use reasonable gas for transfers
      ✔ Should use reasonable gas for approvals
      ✔ Should use reasonable gas for transferFrom
      ✔ Should optimize repeated operations
    Edge Cases and Boundary Conditions
      ✔ Should handle minimum transfer amounts
      ✔ Should handle maximum possible balances
      ✔ Should handle complex approval scenarios
      ✔ Should handle multiple spenders for same owner
    Events Verification
      ✔ Should emit Transfer event on mint
      ✔ Should emit Transfer event on burn
      ✔ Should emit Transfer event on regular transfer
      ✔ Should emit Approval event on approve
      ✔ Should emit both Transfer and Approval events on transferFrom
      ✔ Should emit OwnershipTransferred event on ownership change

  Performance and Gas Optimization Tests
    Gas Usage Benchmarks
Treasury deployment estimated gas: 3447045
      ✔ Should benchmark Treasury contract deployment
QACard deployment estimated gas: 3802813
      ✔ Should benchmark QACard contract deployment
MockUSDT deployment estimated gas: 987945
      ✔ Should benchmark MockUSDT contract deployment
    Treasury Operations Gas Analysis
Silver purchase gas: 306727
Gold purchase gas: 238339
Diamond purchase gas: 238351
      ✔ Should analyze gas usage for product purchases
Gas usage progression: [ '169927', '169927', '169927', '169927', '169927', '169927' ]
      ✔ Should analyze gas optimization for repeated purchases
Withdrawal gas: 101396
Emergency withdrawal gas: 48385
      ✔ Should benchmark withdrawal operations
Batch deposit gas: 90322
Estimated individual total gas: 935135
      ✔ Should benchmark batch operations
    QACard Gas Analysis
Single mint average gas: 146148
Batch mint gas: 360835
      ✔ Should analyze single vs batch minting gas efficiency
Single transfer gas: 62611
Batch transfer gas: 79216
      ✔ Should analyze transfer operations gas usage
Approval gas: 46770
Revoke approval gas: 24858
      ✔ Should analyze approval operations gas usage
    MockUSDT Gas Analysis
USDT transfer gas: 34423
USDT approve gas: 45980
USDT transferFrom gas: 39935
      ✔ Should analyze transfer operations gas efficiency
USDT mint gas: 36148
USDT burn gas: 36431
      ✔ Should analyze mint and burn operations gas usage
    Load Testing
Processed 35/50 transactions in 24ms
Average time per transaction: 0.6857142857142857ms
      ✔ Should handle high-frequency transactions
8 concurrent transactions completed in 5ms
Failed transactions: 0
      ✔ Should handle concurrent users efficiently
5 users: 2.8ms per user
10 users: 0.5ms per user
15 users: 0.3333333333333333ms per user
      ✔ Should maintain performance under varying load (96ms)
    Memory and Storage Optimization
      ✔ Should efficiently manage storage for user investments
