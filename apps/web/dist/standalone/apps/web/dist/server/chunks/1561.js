"use strict";exports.id=1561,exports.ids=[1561],exports.modules={61561:(a,b,c)=>{c.d(b,{authApi:()=>k,Ay:()=>m,monitoringApi:()=>l});var d=c(70747),e=function(a){return a[a.DEBUG=0]="DEBUG",a[a.INFO=1]="INFO",a[a.WARN=2]="WARN",a[a.ERROR=3]="ERROR",a[a.FATAL=4]="FATAL",a}({});class f{constructor(){this.config={level:3,enableConsole:!0,enableRemote:!0,enableLocalStorage:!1,maxLocalStorageLogs:1e3,verbose:!1,performanceThreshold:1e3,enableDeduplication:!0,environment:"production"},this.logBuffer=[],this.timers=new Map,this.loggedMessages=new Set,this.sessionId=this.generateSessionId(),this.loadConfig(),this.setupGlobalErrorHandler(),this.setupPerformanceObserver()}static getEnvironmentLogLevel(){return 3}loadConfig(){}setConfig(a){this.config={...this.config,...a},localStorage.setItem("logger_config",JSON.stringify(this.config)),this.log(1,"Logger","Config updated",{config:this.config})}setUserId(a){this.userId=a,this.log(1,"Logger","User ID set",{userId:a})}generateSessionId(){return`session_${Date.now()}_${Math.random().toString(36).slice(2,11)}`}generateRequestId(){return`req_${Date.now()}_${Math.random().toString(36).slice(2,11)}`}log(a,b,c,d,f){if(a<this.config.level)return;if(this.config.enableDeduplication){let d=`${a}-${b}-${c}`;if(this.loggedMessages.has(d))return;if(this.loggedMessages.add(d),this.loggedMessages.size>500){let a=Array.from(this.loggedMessages);this.loggedMessages.clear(),a.slice(-250).forEach(a=>this.loggedMessages.add(a))}}let g={timestamp:new Date().toISOString(),level:a,levelName:e[a],message:c,module:b,userId:this.userId,sessionId:this.sessionId,metadata:d,error:f,stack:f?.stack,url:window.location.href,userAgent:navigator.userAgent};this.config.enableConsole&&this.consoleLog(g),this.config.enableLocalStorage&&this.saveToLocalStorage(g),this.config.enableRemote&&this.sendToRemote(g),this.logBuffer.push(g),this.logBuffer.length>100&&this.logBuffer.shift()}consoleLog(a){let b=this.getConsoleStyle(a.level),c=`[${a.levelName}] [${a.module}]`;this.config.verbose?(console.groupCollapsed(`%c${c} ${a.message}`,b),console.log("Timestamp:",a.timestamp),console.log("Session:",a.sessionId),a.userId&&console.log("User:",a.userId),a.metadata&&console.log("Metadata:",a.metadata),a.error&&console.error("Error:",a.error),a.stack&&console.log("Stack:",a.stack),console.log("URL:",a.url),console.groupEnd()):this.getConsoleFunction(a.level)(`%c${c}`,b,a.message,a.metadata||"")}getConsoleStyle(a){switch(a){case 0:return"color: #6B7280; font-weight: normal;";case 1:return"color: #3B82F6; font-weight: normal;";case 2:return"color: #F59E0B; font-weight: bold;";case 3:return"color: #EF4444; font-weight: bold;";case 4:return"color: #FFFFFF; background-color: #DC2626; font-weight: bold; padding: 2px 4px;";default:return""}}getConsoleFunction(a){switch(a){case 0:return console.debug;case 1:return console.info;case 2:return console.warn;case 3:case 4:return console.error;default:return console.log}}saveToLocalStorage(a){try{let b=this.getLocalStorageLogs();b.push(a),b.length>this.config.maxLocalStorageLogs&&b.splice(0,b.length-this.config.maxLocalStorageLogs),localStorage.setItem("app_logs",JSON.stringify(b))}catch(a){console.error("Failed to save log to localStorage:",a)}}getLocalStorageLogs(){try{let a=localStorage.getItem("app_logs");return a?JSON.parse(a):[]}catch(a){return console.error("Failed to get logs from localStorage:",a),[]}}clearLocalStorageLogs(){localStorage.removeItem("app_logs"),this.info("Logger","Local storage logs cleared")}async sendToRemote(a){if(this.config.remoteEndpoint)try{await fetch(this.config.remoteEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)})}catch(a){console.error("Failed to send log to remote:",a)}}debug(a,b,c){this.log(0,a,b,c)}info(a,b,c){this.log(1,a,b,c)}warn(a,b,c){this.log(2,a,b,c)}error(a,b,c,d){this.log(3,a,b,d,c)}fatal(a,b,c,d){this.log(4,a,b,d,c)}time(a){this.timers.set(a,performance.now()),this.debug("Performance",`Timer started: ${a}`)}timeEnd(a,b){let c=this.timers.get(a);if(!c)return void this.warn("Performance",`Timer not found: ${a}`);let d=performance.now()-c;this.timers.delete(a);let e=d>this.config.performanceThreshold?2:1;return this.log(e,"Performance",`Timer ended: ${a}`,{...b,duration:`${d.toFixed(2)}ms`,durationMs:d}),d}group(a,b){this.config.enableConsole&&this.config.verbose&&console.group(`[${a}] ${b}`),this.debug(a,`Group started: ${b}`)}groupEnd(a,b){this.config.enableConsole&&this.config.verbose&&console.groupEnd(),this.debug(a,`Group ended: ${b}`)}table(a,b,c){this.config.enableConsole&&console.table(b,c),this.info(a,"Table data",{data:b,columns:c})}logApiRequest(a,b,c,d){let e=this.generateRequestId();return this.info("API",`${a} ${b}`,{requestId:e,method:a,url:b,data:c,headers:d}),e}logApiResponse(a,b,c,d){this.log(b>=400?3:1,"API",`Response ${b}`,{requestId:a,status:b,data:c,duration:d?`${d}ms`:void 0})}logApiError(a,b){this.error("API","Request failed",b,{requestId:a})}logWsConnect(a){this.info("WebSocket",`Connected to ${a}`)}logWsDisconnect(a,b){this.warn("WebSocket",`Disconnected from ${a}`,{reason:b})}logWsMessage(a,b){this.debug("WebSocket",`Message ${a}`,{data:b})}logWsError(a){this.error("WebSocket","WebSocket error",a)}logUserAction(a,b,c){this.info("UserAction",a,{target:b,...c})}logPagePerformance(){if(!window.performance)return;let a=window.performance.timing,b=a.loadEventEnd-a.navigationStart,c=a.responseEnd-a.requestStart,d=a.domComplete-a.domLoading;this.info("Performance","Page performance metrics",{pageLoadTime:`${b}ms`,connectTime:`${c}ms`,renderTime:`${d}ms`,domContentLoaded:`${a.domContentLoadedEventEnd-a.navigationStart}ms`})}setupGlobalErrorHandler(){}setupPerformanceObserver(){}getStats(){let a=this.getLocalStorageLogs(),b={total:a.length,debug:0,info:0,warn:0,error:0,fatal:0,modules:new Set,recentErrors:[]};for(let c of a){switch(c.level){case 0:b.debug++;break;case 1:b.info++;break;case 2:b.warn++;break;case 3:b.error++;break;case 4:b.fatal++}c.module&&b.modules.add(c.module),c.level>=3&&b.recentErrors.push(c)}return b.recentErrors=b.recentErrors.slice(-10),b}exportLogs(a="json"){let b=this.getLocalStorageLogs();return"json"===a?JSON.stringify(b,null,2):["timestamp,level,module,message,userId,sessionId,url",...b.map(a=>[a.timestamp,a.levelName,a.module||"",a.message,a.userId||"",a.sessionId,a.url||""]).map(a=>a.map(a=>`"${a}"`).join(","))].join("\n")}logWalletConnection(a,b){this.info("Wallet",`Connected: ${a}`,{address:a,chainId:b})}logWalletDisconnection(){this.info("Wallet","Disconnected")}logTransactionStart(a,b){this.info("Transaction",`Started: ${b}`,{hash:a,type:b})}logTransactionSuccess(a,b){this.info("Transaction",`Success: ${b}`,{hash:a,type:b})}logTransactionError(a,b){this.error("Transaction",`Failed: ${b}`,a,{type:b})}logContractCall(a,b,c){this.debug("Contract",`Call: ${a}.${b}`,{contractName:a,method:b,args:c})}clearDeduplicationCache(){this.loggedMessages.clear(),this.debug("Logger","Deduplication cache cleared")}}let g=new f;var h=c(1872);let i=process.env.NEXT_PUBLIC_API_URL||"http://localhost:3001/api",j=d.A.create({baseURL:i,timeout:1e4,headers:{"Content-Type":"application/json"}});j.interceptors.request.use(a=>{let b=h.b.getAccessToken();b&&(a.headers.Authorization=`Bearer ${b}`);let c=g.logApiRequest(a.method?.toUpperCase()||"GET",a.url||"",a.data,a.headers);return a.headers["X-Request-Id"]=c,a.requestStartTime=Date.now(),a.requestId=c,a},async a=>{throw g.error("API","Request interceptor error",a),a}),j.interceptors.response.use(a=>{let b=a.config,c=b.requestStartTime?Date.now()-b.requestStartTime:void 0;return g.logApiResponse(b.requestId||"unknown",a.status,a.data,c),a},async a=>{let b=a.config;if(a.response?.status===401&&!b._retry){b._retry=!0;let a=h.b.getRefreshToken();if(a)try{let{accessToken:c}=(await d.A.post(`${i}/auth/refresh`,{refreshToken:a})).data;return h.b.setTokens(c,a),b.headers.Authorization=`Bearer ${c}`,j(b)}catch(b){h.b.clearTokens();let a=await null;return a&&a.error("登录已过期，请重新登录"),window.location.href="/auth/login",Promise.reject(b)}h.b.clearTokens(),window.location.href="/auth/login"}let c=a.response?.data?.message||a.message||"请求失败",e=a.config;if(e?.requestId&&g.logApiError(e.requestId,a),![401,403].includes(a.response?.status||0)){let a=await null;a&&a.error(c)}throw a});let k={login:async a=>j.post("/auth/login",a),register:async a=>j.post("/auth/register",a),getWeb3Challenge:async a=>j.get(`/auth/web3/challenge/${a}`),web3Login:async a=>j.post("/auth/web3/login",a),web3Register:async a=>j.post("/auth/web3/register",a),refresh:async a=>j.post("/auth/refresh",{refreshToken:a}),logout:async()=>j.post("/auth/logout"),me:async()=>j.get("/auth/me"),changePassword:async a=>j.post("/auth/change-password",a)},l={getMetrics:async a=>j.get("/monitoring/metrics",{params:a}),getDashboard:async(a="24h")=>j.get("/monitoring/dashboard",{params:{timeRange:a}}),getDeprecations:async()=>j.get("/monitoring/deprecations")},m=j}};