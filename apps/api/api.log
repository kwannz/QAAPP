npm warn Unknown project config "auto-install-peers". This will stop working in the next major version of npm.
npm warn Unknown project config "strict-peer-dependencies". This will stop working in the next major version of npm.

> @qa-app/api@1.0.0 dev
> nest start --watch

[2J[3J[H[[90m11:24:14 PM[0m] Starting compilation in watch mode...

[[90m11:24:14 PM[0m] Found 0 errors. Watching for file changes.

(node:86301) [DEP0190] DeprecationWarning: Passing args to a child process with shell option true can lead to security vulnerabilities, as the arguments are not escaped, only concatenated.
(Use `node --trace-deprecation ...` to show where the warning was created)
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +82ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +1ms[39m
[31m[Nest] 86308  - [39m08/25/2025, 11:24:15 PM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +1ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-v_cd252036683558c8e092e5ab8d217a0d/node_modules/@nestjs/platform-express/adapters/express-adapter.js:95:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:183:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:173:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m11:29:53 PM[0m] File change detected. Starting incremental compilation...

[[90m11:29:53 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +106ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +0ms[39m
[31m[Nest] 89420  - [39m08/25/2025, 11:29:54 PM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +1ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-v_cd252036683558c8e092e5ab8d217a0d/node_modules/@nestjs/platform-express/adapters/express-adapter.js:95:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:183:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:173:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m11:35:39 PM[0m] File change detected. Starting incremental compilation...

[[90m11:35:39 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[BlockchainService] [39m[32m‚úÖ Treasury contract loaded: 0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[BlockchainService] [39m[32m‚úÖ QACard contract loaded: 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[BlockchainService] [39m[32m‚úÖ USDT contract loaded: 0x5FbDB2315678afecb367f032d93F642f64180aa3[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDatabaseModule dependencies initialized[39m[38;5;3m +15ms[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +11ms[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mBlockchainModule dependencies initialized[39m[38;5;3m +0ms[39m
[31m[Nest] 91338  - [39m08/25/2025, 11:35:40 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39m[31mNest can't resolve dependencies of the ProductsController (?). Please make sure that the argument "ProductsService" at index [0] is available in the ProductsModule context.

Potential solutions:
- Is ProductsModule a valid NestJS module?
- If "ProductsService" is a provider, is it part of the current ProductsModule?
- If "ProductsService" is exported from a separate @Module, is that module imported within ProductsModule?
  @Module({
    imports: [ /* the Module containing "ProductsService" */ ]
  })
[39m
Error: Nest can't resolve dependencies of the ProductsController (?). Please make sure that the argument "ProductsService" at index [0] is available in the ProductsModule context.

Potential solutions:
- Is ProductsModule a valid NestJS module?
- If "ProductsService" is a provider, is it part of the current ProductsModule?
- If "ProductsService" is exported from a separate @Module, is that module imported within ProductsModule?
  @Module({
    imports: [ /* the Module containing "ProductsService" */ ]
  })

    at Injector.lookupComponentInParentModules (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:262:19)
    at async Injector.resolveComponentInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:215:33)
    at async resolveParam (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:129:38)
    at async Promise.all (index 0)
    at async Injector.resolveConstructorParams (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:144:27)
    at async Injector.loadInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:70:13)
    at async Injector.loadController (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:89:9)
    at async /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:68:13
    at async Promise.all (index 0)
    at async InstanceLoader.createInstancesOfControllers (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:67:9)
[2J[3J[H[[90m11:35:54 PM[0m] File change detected. Starting incremental compilation...

[[90m11:35:55 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDatabaseModule dependencies initialized[39m[38;5;3m +5ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +2ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mUsersModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +3ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mUsersController {/api/users}:[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets/:walletId, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/referral/:code, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/kyc, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/role, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/toggle-status, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/admin/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [32m    LOG[39m [38;5;3m[DatabaseService] [39m[32mObject:[39m
{
  "timestamp": "2025-08-25T15:35:55.805Z",
  "message": "Starting a postgresql pool with 33 connections.",
  "target": "quaint::pooled"
}

[31m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [31m  ERROR[39m [38;5;3m[DatabaseService] [39m[31m‚ùå Failed to connect to database:[39m
[31m[Nest] 91460  - [39m08/25/2025, 11:35:55 PM [31m  ERROR[39m [38;5;3m[DatabaseService] [39m[31mPrismaClientInitializationError: User `qa_user` was denied access on the database `qa_app_dev.public`[39m
/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:112
You may have to run ${qe("prisma generate")} for your changes to take effect.`,this.config.clientVersion);return t}}parseEngineResponse(t){if(!t)throw new B("Response from the Engine was empty",{clientVersion:this.config.clientVersion});try{return JSON.parse(t)}catch{throw new B("Unable to JSON.parse response from engine",{clientVersion:this.config.clientVersion})}}async loadEngine(){if(!this.engine){this.QueryEngineConstructor||(this.library=await this.libraryLoader.loadLibrary(this.config),this.QueryEngineConstructor=this.library.QueryEngine);try{let t=new WeakRef(this),{adapter:r}=this.config;r&&Ae("Using driver adapter: %O",r),this.engine=new this.QueryEngineConstructor({datamodel:this.datamodel,env:process.env,logQueries:this.config.logQueries??!1,ignoreEnvVarErrors:!0,datasourceOverrides:this.datasourceOverrides??{},logLevel:this.logLevel,configDir:this.config.cwd,engineProtocol:"json"},n=>{t.deref()?.logger(n)},r)}catch(t){let r=t,n=this.parseInitError(r.message);throw typeof n=="string"?r:new R(n.message,this.config.clientVersion,n.error_code)}}}logger(t){let r=this.parseEngineResponse(t);if(r){if("span"in r){this.config.tracingHelper.createEngineSpan(r);return}r.level=r?.level.toLowerCase()??"unknown",fm(r)?this.logEmitter.emit("query",{timestamp:new Date,query:r.query,params:r.params,duration:Number(r.duration_ms),target:r.module_path}):gm(r)?this.loggerRustPanic=new le(lo(this,`${r.message}: ${r.reason} in ${r.file}:${r.line}:${r.column}`),this.config.clientVersion):this.logEmitter.emit(r.level,{timestamp:new Date,message:r.message,target:r.module_path})}}parseInitError(t){try{return JSON.parse(t)}catch{}return t}parseRequestError(t){try{return JSON.parse(t)}catch{}return t}onBeforeExit(){throw new Error('"beforeExit" hook is not applicable to the library engine since Prisma 5.0.0, it is only relevant and implemented for the binary engine. Please add your event listener to the `process` object directly instead.')}async start(){if(await this.libraryInstantiationPromise,await this.libraryStoppingPromise,this.libraryStartingPromise)return Ae(`library already starting, this.libraryStarted: ${this.libraryStarted}`),this.libraryStartingPromise;if(this.libraryStarted)return;let t=async()=>{Ae("library starting");try{let r={traceparent:this.config.tracingHelper.getTraceParent()};await this.engine?.connect(JSON.stringify(r)),this.libraryStarted=!0,Ae("library started")}catch(r){let n=this.parseInitError(r.message);throw typeof n=="string"?r:new R(n.message,this.config.clientVersion,n.error_code)}finally{this.libraryStartingPromise=void 0}};return this.libraryStartingPromise=this.config.tracingHelper.runInChildSpan("connect",t),this.libraryStartingPromise}async stop(){if(await this.libraryStartingPromise,await this.executingQueryPromise,this.libraryStoppingPromise)return Ae("library is already stopping"),this.libraryStoppingPromise;if(!this.libraryStarted)return;let t=async()=>{await new Promise(n=>setTimeout(n,5)),Ae("library stopping");let r={traceparent:this.config.tracingHelper.getTraceParent()};await this.engine?.disconnect(JSON.stringify(r)),this.libraryStarted=!1,this.libraryStoppingPromise=void 0,Ae("library stopped")};return this.libraryStoppingPromise=this.config.tracingHelper.runInChildSpan("disconnect",t),this.libraryStoppingPromise}version(){return this.versionInfo=this.library?.version(),this.versionInfo?.version??"unknown"}debugPanic(t){return this.library?.debugPanic(t)}async request(t,{traceparent:r,interactiveTransaction:n}){Ae(`sending request, this.libraryStarted: ${this.libraryStarted}`);let i=JSON.stringify({traceparent:r}),o=JSON.stringify(t);try{await this.start(),this.executingQueryPromise=this.engine?.query(o,i,n?.id),this.lastQuery=o;let s=this.parseEngineResponse(await this.executingQueryPromise);if(s.errors)throw s.errors.length===1?this.buildQueryError(s.errors[0]):new B(JSON.stringify(s.errors),{clientVersion:this.config.clientVersion});if(this.loggerRustPanic)throw this.loggerRustPanic;return{data:s,elapsed:0}}catch(s){if(s instanceof R)throw s;if(s.code==="GenericFailure"&&s.message?.startsWith("PANIC:"))throw new le(lo(this,s.message),this.config.clientVersion);let a=this.parseRequestError(s.message);throw typeof a=="string"?s:new B(`${a.message}


PrismaClientInitializationError: User `qa_user` was denied access on the database `qa_app_dev.public`
    at t (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:112:2488)
    at async Proxy.onModuleInit (/Users/zhaoleon/Desktop/QAapp/apps/api/src/database/database.service.ts:59:7)
    at async Promise.all (index 0)
    at async callModuleInitHook (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/hooks/on-module-init.hook.js:43:5)
    at async NestApplication.callInitHook (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application-context.js:234:13)
    at async NestApplication.init (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:100:9)
    at async NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:170:13)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  clientVersion: '5.22.0',
  errorCode: 'P1010'
}

Node.js v24.4.0
[2J[3J[H[[90m11:36:49 PM[0m] File change detected. Starting incremental compilation...

[[90m11:36:49 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDatabaseModule dependencies initialized[39m[38;5;3m +4ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mUsersModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +3ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +1ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mUsersController {/api/users}:[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets/:walletId, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/referral/:code, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/kyc, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/role, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/toggle-status, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/admin/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [32m    LOG[39m [38;5;3m[DatabaseService] [39m[32mObject:[39m
{
  "timestamp": "2025-08-25T15:36:50.470Z",
  "message": "Starting a postgresql pool with 33 connections.",
  "target": "quaint::pooled"
}

[31m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [31m  ERROR[39m [38;5;3m[DatabaseService] [39m[31m‚ùå Failed to connect to database:[39m
[31m[Nest] 91713  - [39m08/25/2025, 11:36:50 PM [31m  ERROR[39m [38;5;3m[DatabaseService] [39m[31mPrismaClientInitializationError: User `qa_user` was denied access on the database `qa_app_dev.public`[39m
/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:112
You may have to run ${qe("prisma generate")} for your changes to take effect.`,this.config.clientVersion);return t}}parseEngineResponse(t){if(!t)throw new B("Response from the Engine was empty",{clientVersion:this.config.clientVersion});try{return JSON.parse(t)}catch{throw new B("Unable to JSON.parse response from engine",{clientVersion:this.config.clientVersion})}}async loadEngine(){if(!this.engine){this.QueryEngineConstructor||(this.library=await this.libraryLoader.loadLibrary(this.config),this.QueryEngineConstructor=this.library.QueryEngine);try{let t=new WeakRef(this),{adapter:r}=this.config;r&&Ae("Using driver adapter: %O",r),this.engine=new this.QueryEngineConstructor({datamodel:this.datamodel,env:process.env,logQueries:this.config.logQueries??!1,ignoreEnvVarErrors:!0,datasourceOverrides:this.datasourceOverrides??{},logLevel:this.logLevel,configDir:this.config.cwd,engineProtocol:"json"},n=>{t.deref()?.logger(n)},r)}catch(t){let r=t,n=this.parseInitError(r.message);throw typeof n=="string"?r:new R(n.message,this.config.clientVersion,n.error_code)}}}logger(t){let r=this.parseEngineResponse(t);if(r){if("span"in r){this.config.tracingHelper.createEngineSpan(r);return}r.level=r?.level.toLowerCase()??"unknown",fm(r)?this.logEmitter.emit("query",{timestamp:new Date,query:r.query,params:r.params,duration:Number(r.duration_ms),target:r.module_path}):gm(r)?this.loggerRustPanic=new le(lo(this,`${r.message}: ${r.reason} in ${r.file}:${r.line}:${r.column}`),this.config.clientVersion):this.logEmitter.emit(r.level,{timestamp:new Date,message:r.message,target:r.module_path})}}parseInitError(t){try{return JSON.parse(t)}catch{}return t}parseRequestError(t){try{return JSON.parse(t)}catch{}return t}onBeforeExit(){throw new Error('"beforeExit" hook is not applicable to the library engine since Prisma 5.0.0, it is only relevant and implemented for the binary engine. Please add your event listener to the `process` object directly instead.')}async start(){if(await this.libraryInstantiationPromise,await this.libraryStoppingPromise,this.libraryStartingPromise)return Ae(`library already starting, this.libraryStarted: ${this.libraryStarted}`),this.libraryStartingPromise;if(this.libraryStarted)return;let t=async()=>{Ae("library starting");try{let r={traceparent:this.config.tracingHelper.getTraceParent()};await this.engine?.connect(JSON.stringify(r)),this.libraryStarted=!0,Ae("library started")}catch(r){let n=this.parseInitError(r.message);throw typeof n=="string"?r:new R(n.message,this.config.clientVersion,n.error_code)}finally{this.libraryStartingPromise=void 0}};return this.libraryStartingPromise=this.config.tracingHelper.runInChildSpan("connect",t),this.libraryStartingPromise}async stop(){if(await this.libraryStartingPromise,await this.executingQueryPromise,this.libraryStoppingPromise)return Ae("library is already stopping"),this.libraryStoppingPromise;if(!this.libraryStarted)return;let t=async()=>{await new Promise(n=>setTimeout(n,5)),Ae("library stopping");let r={traceparent:this.config.tracingHelper.getTraceParent()};await this.engine?.disconnect(JSON.stringify(r)),this.libraryStarted=!1,this.libraryStoppingPromise=void 0,Ae("library stopped")};return this.libraryStoppingPromise=this.config.tracingHelper.runInChildSpan("disconnect",t),this.libraryStoppingPromise}version(){return this.versionInfo=this.library?.version(),this.versionInfo?.version??"unknown"}debugPanic(t){return this.library?.debugPanic(t)}async request(t,{traceparent:r,interactiveTransaction:n}){Ae(`sending request, this.libraryStarted: ${this.libraryStarted}`);let i=JSON.stringify({traceparent:r}),o=JSON.stringify(t);try{await this.start(),this.executingQueryPromise=this.engine?.query(o,i,n?.id),this.lastQuery=o;let s=this.parseEngineResponse(await this.executingQueryPromise);if(s.errors)throw s.errors.length===1?this.buildQueryError(s.errors[0]):new B(JSON.stringify(s.errors),{clientVersion:this.config.clientVersion});if(this.loggerRustPanic)throw this.loggerRustPanic;return{data:s,elapsed:0}}catch(s){if(s instanceof R)throw s;if(s.code==="GenericFailure"&&s.message?.startsWith("PANIC:"))throw new le(lo(this,s.message),this.config.clientVersion);let a=this.parseRequestError(s.message);throw typeof a=="string"?s:new B(`${a.message}


PrismaClientInitializationError: User `qa_user` was denied access on the database `qa_app_dev.public`
    at t (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:112:2488)
    at async Proxy.onModuleInit (/Users/zhaoleon/Desktop/QAapp/apps/api/src/database/database.service.ts:59:7)
    at async Promise.all (index 0)
    at async callModuleInitHook (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/hooks/on-module-init.hook.js:43:5)
    at async NestApplication.callInitHook (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application-context.js:234:13)
    at async NestApplication.init (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:100:9)
    at async NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:170:13)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  clientVersion: '5.22.0',
  errorCode: 'P1010'
}

Node.js v24.4.0
[2J[3J[H[[90m11:38:12 PM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.module.ts[0m:[93m29[0m:[93m5[0m - [91merror[0m[90m TS2304: [0mCannot find name 'UsersModule'.

[7m29[0m     UsersModule,
[7m  [0m [91m    ~~~~~~~~~~~[0m

[[90m11:38:12 PM[0m] Found 1 error. Watching for file changes.

[2J[3J[H[[90m11:38:33 PM[0m] File change detected. Starting incremental compilation...

[[90m11:38:33 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 92226  - [39m08/25/2025, 11:38:34 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 92226  - [39m08/25/2025, 11:38:34 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 92226  - [39m08/25/2025, 11:38:34 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[31m[Nest] 92226  - [39m08/25/2025, 11:38:34 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39m[31mNest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })
[39m
Error: Nest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })

    at Injector.lookupComponentInParentModules (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:262:19)
    at async Injector.resolveComponentInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:215:33)
    at async resolveParam (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:129:38)
    at async Promise.all (index 1)
    at async Injector.resolveConstructorParams (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:144:27)
    at async Injector.loadInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:70:13)
    at async Injector.loadProvider (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:98:9)
    at async /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:56:13
    at async Promise.all (index 4)
    at async InstanceLoader.createInstancesOfProviders (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:55:9)
[2J[3J[H[[90m11:38:40 PM[0m] File change detected. Starting incremental compilation...

[[90m11:38:40 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 92277  - [39m08/25/2025, 11:38:41 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 92277  - [39m08/25/2025, 11:38:41 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 92277  - [39m08/25/2025, 11:38:41 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[31m[Nest] 92277  - [39m08/25/2025, 11:38:41 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39m[31mNest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })
[39m
Error: Nest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })

    at Injector.lookupComponentInParentModules (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:262:19)
    at async Injector.resolveComponentInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:215:33)
    at async resolveParam (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:129:38)
    at async Promise.all (index 1)
    at async Injector.resolveConstructorParams (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:144:27)
    at async Injector.loadInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:70:13)
    at async Injector.loadProvider (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:98:9)
    at async /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:56:13
    at async Promise.all (index 4)
    at async InstanceLoader.createInstancesOfProviders (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:55:9)
[2J[3J[H[[90m11:38:46 PM[0m] File change detected. Starting incremental compilation...

[[90m11:38:46 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 92344  - [39m08/25/2025, 11:38:47 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 92344  - [39m08/25/2025, 11:38:47 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 92344  - [39m08/25/2025, 11:38:47 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[31m[Nest] 92344  - [39m08/25/2025, 11:38:47 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39m[31mNest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })
[39m
Error: Nest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })

    at Injector.lookupComponentInParentModules (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:262:19)
    at async Injector.resolveComponentInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:215:33)
    at async resolveParam (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:129:38)
    at async Promise.all (index 1)
    at async Injector.resolveConstructorParams (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:144:27)
    at async Injector.loadInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:70:13)
    at async Injector.loadProvider (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:98:9)
    at async /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:56:13
    at async Promise.all (index 4)
    at async InstanceLoader.createInstancesOfProviders (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:55:9)
[2J[3J[H[[90m11:38:51 PM[0m] File change detected. Starting incremental compilation...

[[90m11:38:51 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 92377  - [39m08/25/2025, 11:38:52 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 92377  - [39m08/25/2025, 11:38:52 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 92377  - [39m08/25/2025, 11:38:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[31m[Nest] 92377  - [39m08/25/2025, 11:38:52 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39m[31mNest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })
[39m
Error: Nest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })

    at Injector.lookupComponentInParentModules (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:262:19)
    at async Injector.resolveComponentInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:215:33)
    at async resolveParam (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:129:38)
    at async Promise.all (index 1)
    at async Injector.resolveConstructorParams (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:144:27)
    at async Injector.loadInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:70:13)
    at async Injector.loadProvider (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:98:9)
    at async /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:56:13
    at async Promise.all (index 4)
    at async InstanceLoader.createInstancesOfProviders (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:55:9)
[2J[3J[H[[90m11:38:56 PM[0m] File change detected. Starting incremental compilation...

[[90m11:38:57 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 92465  - [39m08/25/2025, 11:38:57 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 92465  - [39m08/25/2025, 11:38:57 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 92465  - [39m08/25/2025, 11:38:57 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[31m[Nest] 92465  - [39m08/25/2025, 11:38:57 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39m[31mNest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })
[39m
Error: Nest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })

    at Injector.lookupComponentInParentModules (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:262:19)
    at async Injector.resolveComponentInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:215:33)
    at async resolveParam (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:129:38)
    at async Promise.all (index 1)
    at async Injector.resolveConstructorParams (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:144:27)
    at async Injector.loadInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:70:13)
    at async Injector.loadProvider (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:98:9)
    at async /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:56:13
    at async Promise.all (index 4)
    at async InstanceLoader.createInstancesOfProviders (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:55:9)
[2J[3J[H[[90m11:39:02 PM[0m] File change detected. Starting incremental compilation...

[[90m11:39:02 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 92514  - [39m08/25/2025, 11:39:03 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 92514  - [39m08/25/2025, 11:39:03 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 92514  - [39m08/25/2025, 11:39:03 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[31m[Nest] 92514  - [39m08/25/2025, 11:39:03 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39m[31mNest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })
[39m
Error: Nest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })

    at Injector.lookupComponentInParentModules (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:262:19)
    at async Injector.resolveComponentInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:215:33)
    at async resolveParam (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:129:38)
    at async Promise.all (index 1)
    at async Injector.resolveConstructorParams (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:144:27)
    at async Injector.loadInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:70:13)
    at async Injector.loadProvider (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:98:9)
    at async /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:56:13
    at async Promise.all (index 4)
    at async InstanceLoader.createInstancesOfProviders (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:55:9)
[2J[3J[H[[90m11:39:09 PM[0m] File change detected. Starting incremental compilation...

[[90m11:39:10 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 92602  - [39m08/25/2025, 11:39:10 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 92602  - [39m08/25/2025, 11:39:10 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 92602  - [39m08/25/2025, 11:39:10 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[31m[Nest] 92602  - [39m08/25/2025, 11:39:10 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39m[31mNest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })
[39m
Error: Nest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument UsersService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If UsersService is a provider, is it part of the current AuthModule?
- If UsersService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing UsersService */ ]
  })

    at Injector.lookupComponentInParentModules (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:262:19)
    at async Injector.resolveComponentInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:215:33)
    at async resolveParam (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:129:38)
    at async Promise.all (index 1)
    at async Injector.resolveConstructorParams (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:144:27)
    at async Injector.loadInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:70:13)
    at async Injector.loadProvider (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:98:9)
    at async /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:56:13
    at async Promise.all (index 4)
    at async InstanceLoader.createInstancesOfProviders (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:55:9)
[2J[3J[H[[90m11:39:29 PM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m22[0m:[93m27[0m - [91merror[0m[90m TS2304: [0mCannot find name 'UsersService'.

[7m22[0m     private usersService: UsersService,
[7m  [0m [91m                          ~~~~~~~~~~~~[0m

[[90m11:39:29 PM[0m] Found 1 error. Watching for file changes.

[2J[3J[H[[90m11:39:35 PM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m35[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'usersService' does not exist on type 'JwtStrategy'.

[7m35[0m     const user = await this.usersService.findById(payload.sub);
[7m  [0m [91m                            ~~~~~~~~~~~~[0m

[[90m11:39:35 PM[0m] Found 1 error. Watching for file changes.

[2J[3J[H[[90m11:39:44 PM[0m] File change detected. Starting incremental compilation...

[[90m11:39:44 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 92913  - [39m08/25/2025, 11:39:45 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 92913  - [39m08/25/2025, 11:39:45 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 92913  - [39m08/25/2025, 11:39:45 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[31m[Nest] 92913  - [39m08/25/2025, 11:39:45 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39m[31mNest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument MockAuthService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If MockAuthService is a provider, is it part of the current AuthModule?
- If MockAuthService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing MockAuthService */ ]
  })
[39m
Error: Nest can't resolve dependencies of the JwtStrategy (ConfigService, ?). Please make sure that the argument MockAuthService at index [1] is available in the AuthModule context.

Potential solutions:
- Is AuthModule a valid NestJS module?
- If MockAuthService is a provider, is it part of the current AuthModule?
- If MockAuthService is exported from a separate @Module, is that module imported within AuthModule?
  @Module({
    imports: [ /* the Module containing MockAuthService */ ]
  })

    at Injector.lookupComponentInParentModules (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:262:19)
    at async Injector.resolveComponentInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:215:33)
    at async resolveParam (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:129:38)
    at async Promise.all (index 1)
    at async Injector.resolveConstructorParams (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:144:27)
    at async Injector.loadInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:70:13)
    at async Injector.loadProvider (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:98:9)
    at async /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:56:13
    at async Promise.all (index 4)
    at async InstanceLoader.createInstancesOfProviders (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:55:9)
[2J[3J[H[[90m11:39:51 PM[0m] File change detected. Starting incremental compilation...

[[90m11:39:52 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDatabaseModule dependencies initialized[39m[38;5;3m +4ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mUsersModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +2ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +1ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mUsersController {/api/users}:[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets/:walletId, DELETE} route[39m[38;5;3m +1ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/referral/:code, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/kyc, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/role, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/toggle-status, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/admin/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [32m    LOG[39m [38;5;3m[DatabaseService] [39m[32mObject:[39m
{
  "timestamp": "2025-08-25T15:39:52.859Z",
  "message": "Starting a postgresql pool with 33 connections.",
  "target": "quaint::pooled"
}

[31m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [31m  ERROR[39m [38;5;3m[DatabaseService] [39m[31m‚ùå Failed to connect to database:[39m
[31m[Nest] 92998  - [39m08/25/2025, 11:39:52 PM [31m  ERROR[39m [38;5;3m[DatabaseService] [39m[31mPrismaClientInitializationError: User `qa_user` was denied access on the database `qa_app_dev.public`[39m
/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:112
You may have to run ${qe("prisma generate")} for your changes to take effect.`,this.config.clientVersion);return t}}parseEngineResponse(t){if(!t)throw new B("Response from the Engine was empty",{clientVersion:this.config.clientVersion});try{return JSON.parse(t)}catch{throw new B("Unable to JSON.parse response from engine",{clientVersion:this.config.clientVersion})}}async loadEngine(){if(!this.engine){this.QueryEngineConstructor||(this.library=await this.libraryLoader.loadLibrary(this.config),this.QueryEngineConstructor=this.library.QueryEngine);try{let t=new WeakRef(this),{adapter:r}=this.config;r&&Ae("Using driver adapter: %O",r),this.engine=new this.QueryEngineConstructor({datamodel:this.datamodel,env:process.env,logQueries:this.config.logQueries??!1,ignoreEnvVarErrors:!0,datasourceOverrides:this.datasourceOverrides??{},logLevel:this.logLevel,configDir:this.config.cwd,engineProtocol:"json"},n=>{t.deref()?.logger(n)},r)}catch(t){let r=t,n=this.parseInitError(r.message);throw typeof n=="string"?r:new R(n.message,this.config.clientVersion,n.error_code)}}}logger(t){let r=this.parseEngineResponse(t);if(r){if("span"in r){this.config.tracingHelper.createEngineSpan(r);return}r.level=r?.level.toLowerCase()??"unknown",fm(r)?this.logEmitter.emit("query",{timestamp:new Date,query:r.query,params:r.params,duration:Number(r.duration_ms),target:r.module_path}):gm(r)?this.loggerRustPanic=new le(lo(this,`${r.message}: ${r.reason} in ${r.file}:${r.line}:${r.column}`),this.config.clientVersion):this.logEmitter.emit(r.level,{timestamp:new Date,message:r.message,target:r.module_path})}}parseInitError(t){try{return JSON.parse(t)}catch{}return t}parseRequestError(t){try{return JSON.parse(t)}catch{}return t}onBeforeExit(){throw new Error('"beforeExit" hook is not applicable to the library engine since Prisma 5.0.0, it is only relevant and implemented for the binary engine. Please add your event listener to the `process` object directly instead.')}async start(){if(await this.libraryInstantiationPromise,await this.libraryStoppingPromise,this.libraryStartingPromise)return Ae(`library already starting, this.libraryStarted: ${this.libraryStarted}`),this.libraryStartingPromise;if(this.libraryStarted)return;let t=async()=>{Ae("library starting");try{let r={traceparent:this.config.tracingHelper.getTraceParent()};await this.engine?.connect(JSON.stringify(r)),this.libraryStarted=!0,Ae("library started")}catch(r){let n=this.parseInitError(r.message);throw typeof n=="string"?r:new R(n.message,this.config.clientVersion,n.error_code)}finally{this.libraryStartingPromise=void 0}};return this.libraryStartingPromise=this.config.tracingHelper.runInChildSpan("connect",t),this.libraryStartingPromise}async stop(){if(await this.libraryStartingPromise,await this.executingQueryPromise,this.libraryStoppingPromise)return Ae("library is already stopping"),this.libraryStoppingPromise;if(!this.libraryStarted)return;let t=async()=>{await new Promise(n=>setTimeout(n,5)),Ae("library stopping");let r={traceparent:this.config.tracingHelper.getTraceParent()};await this.engine?.disconnect(JSON.stringify(r)),this.libraryStarted=!1,this.libraryStoppingPromise=void 0,Ae("library stopped")};return this.libraryStoppingPromise=this.config.tracingHelper.runInChildSpan("disconnect",t),this.libraryStoppingPromise}version(){return this.versionInfo=this.library?.version(),this.versionInfo?.version??"unknown"}debugPanic(t){return this.library?.debugPanic(t)}async request(t,{traceparent:r,interactiveTransaction:n}){Ae(`sending request, this.libraryStarted: ${this.libraryStarted}`);let i=JSON.stringify({traceparent:r}),o=JSON.stringify(t);try{await this.start(),this.executingQueryPromise=this.engine?.query(o,i,n?.id),this.lastQuery=o;let s=this.parseEngineResponse(await this.executingQueryPromise);if(s.errors)throw s.errors.length===1?this.buildQueryError(s.errors[0]):new B(JSON.stringify(s.errors),{clientVersion:this.config.clientVersion});if(this.loggerRustPanic)throw this.loggerRustPanic;return{data:s,elapsed:0}}catch(s){if(s instanceof R)throw s;if(s.code==="GenericFailure"&&s.message?.startsWith("PANIC:"))throw new le(lo(this,s.message),this.config.clientVersion);let a=this.parseRequestError(s.message);throw typeof a=="string"?s:new B(`${a.message}


PrismaClientInitializationError: User `qa_user` was denied access on the database `qa_app_dev.public`
    at t (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:112:2488)
    at async Proxy.onModuleInit (/Users/zhaoleon/Desktop/QAapp/apps/api/src/database/database.service.ts:59:7)
    at async Promise.all (index 0)
    at async callModuleInitHook (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/hooks/on-module-init.hook.js:43:5)
    at async NestApplication.callInitHook (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application-context.js:234:13)
    at async NestApplication.init (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:100:9)
    at async NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:170:13)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  clientVersion: '5.22.0',
  errorCode: 'P1010'
}

Node.js v24.4.0
[2J[3J[H[[90m11:39:59 PM[0m] File change detected. Starting incremental compilation...

[[90m11:39:59 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDatabaseModule dependencies initialized[39m[38;5;3m +3ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mUsersModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +4ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mUsersController {/api/users}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/me/wallets/:walletId, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/referral/:code, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/kyc, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/role, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id/toggle-status, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/admin/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [32m    LOG[39m [38;5;3m[DatabaseService] [39m[32mObject:[39m
{
  "timestamp": "2025-08-25T15:40:00.044Z",
  "message": "Starting a postgresql pool with 33 connections.",
  "target": "quaint::pooled"
}

[31m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [31m  ERROR[39m [38;5;3m[DatabaseService] [39m[31m‚ùå Failed to connect to database:[39m
[31m[Nest] 93101  - [39m08/25/2025, 11:40:00 PM [31m  ERROR[39m [38;5;3m[DatabaseService] [39m[31mPrismaClientInitializationError: User `qa_user` was denied access on the database `qa_app_dev.public`[39m
/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:112
You may have to run ${qe("prisma generate")} for your changes to take effect.`,this.config.clientVersion);return t}}parseEngineResponse(t){if(!t)throw new B("Response from the Engine was empty",{clientVersion:this.config.clientVersion});try{return JSON.parse(t)}catch{throw new B("Unable to JSON.parse response from engine",{clientVersion:this.config.clientVersion})}}async loadEngine(){if(!this.engine){this.QueryEngineConstructor||(this.library=await this.libraryLoader.loadLibrary(this.config),this.QueryEngineConstructor=this.library.QueryEngine);try{let t=new WeakRef(this),{adapter:r}=this.config;r&&Ae("Using driver adapter: %O",r),this.engine=new this.QueryEngineConstructor({datamodel:this.datamodel,env:process.env,logQueries:this.config.logQueries??!1,ignoreEnvVarErrors:!0,datasourceOverrides:this.datasourceOverrides??{},logLevel:this.logLevel,configDir:this.config.cwd,engineProtocol:"json"},n=>{t.deref()?.logger(n)},r)}catch(t){let r=t,n=this.parseInitError(r.message);throw typeof n=="string"?r:new R(n.message,this.config.clientVersion,n.error_code)}}}logger(t){let r=this.parseEngineResponse(t);if(r){if("span"in r){this.config.tracingHelper.createEngineSpan(r);return}r.level=r?.level.toLowerCase()??"unknown",fm(r)?this.logEmitter.emit("query",{timestamp:new Date,query:r.query,params:r.params,duration:Number(r.duration_ms),target:r.module_path}):gm(r)?this.loggerRustPanic=new le(lo(this,`${r.message}: ${r.reason} in ${r.file}:${r.line}:${r.column}`),this.config.clientVersion):this.logEmitter.emit(r.level,{timestamp:new Date,message:r.message,target:r.module_path})}}parseInitError(t){try{return JSON.parse(t)}catch{}return t}parseRequestError(t){try{return JSON.parse(t)}catch{}return t}onBeforeExit(){throw new Error('"beforeExit" hook is not applicable to the library engine since Prisma 5.0.0, it is only relevant and implemented for the binary engine. Please add your event listener to the `process` object directly instead.')}async start(){if(await this.libraryInstantiationPromise,await this.libraryStoppingPromise,this.libraryStartingPromise)return Ae(`library already starting, this.libraryStarted: ${this.libraryStarted}`),this.libraryStartingPromise;if(this.libraryStarted)return;let t=async()=>{Ae("library starting");try{let r={traceparent:this.config.tracingHelper.getTraceParent()};await this.engine?.connect(JSON.stringify(r)),this.libraryStarted=!0,Ae("library started")}catch(r){let n=this.parseInitError(r.message);throw typeof n=="string"?r:new R(n.message,this.config.clientVersion,n.error_code)}finally{this.libraryStartingPromise=void 0}};return this.libraryStartingPromise=this.config.tracingHelper.runInChildSpan("connect",t),this.libraryStartingPromise}async stop(){if(await this.libraryStartingPromise,await this.executingQueryPromise,this.libraryStoppingPromise)return Ae("library is already stopping"),this.libraryStoppingPromise;if(!this.libraryStarted)return;let t=async()=>{await new Promise(n=>setTimeout(n,5)),Ae("library stopping");let r={traceparent:this.config.tracingHelper.getTraceParent()};await this.engine?.disconnect(JSON.stringify(r)),this.libraryStarted=!1,this.libraryStoppingPromise=void 0,Ae("library stopped")};return this.libraryStoppingPromise=this.config.tracingHelper.runInChildSpan("disconnect",t),this.libraryStoppingPromise}version(){return this.versionInfo=this.library?.version(),this.versionInfo?.version??"unknown"}debugPanic(t){return this.library?.debugPanic(t)}async request(t,{traceparent:r,interactiveTransaction:n}){Ae(`sending request, this.libraryStarted: ${this.libraryStarted}`);let i=JSON.stringify({traceparent:r}),o=JSON.stringify(t);try{await this.start(),this.executingQueryPromise=this.engine?.query(o,i,n?.id),this.lastQuery=o;let s=this.parseEngineResponse(await this.executingQueryPromise);if(s.errors)throw s.errors.length===1?this.buildQueryError(s.errors[0]):new B(JSON.stringify(s.errors),{clientVersion:this.config.clientVersion});if(this.loggerRustPanic)throw this.loggerRustPanic;return{data:s,elapsed:0}}catch(s){if(s instanceof R)throw s;if(s.code==="GenericFailure"&&s.message?.startsWith("PANIC:"))throw new le(lo(this,s.message),this.config.clientVersion);let a=this.parseRequestError(s.message);throw typeof a=="string"?s:new B(`${a.message}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

PrismaClientInitializationError: User `qa_user` was denied access on the database `qa_app_dev.public`
    at t (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:112:2488)
    at async Proxy.onModuleInit (/Users/zhaoleon/Desktop/QAapp/apps/api/src/database/database.service.ts:59:7)
    at async Promise.all (index 0)
    at async callModuleInitHook (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/hooks/on-module-init.hook.js:43:5)
    at async NestApplication.callInitHook (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application-context.js:234:13)
    at async NestApplication.init (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:100:9)
    at async NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:170:13)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  clientVersion: '5.22.0',
  errorCode: 'P1010'
}

Node.js v24.4.0
[2J[3J[H[[90m11:40:16 PM[0m] File change detected. Starting incremental compilation...

[[90m11:40:17 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +11ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +1ms[39m
[31m[Nest] 93351  - [39m08/25/2025, 11:40:17 PM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +0ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-v_cd252036683558c8e092e5ab8d217a0d/node_modules/@nestjs/platform-express/adapters/express-adapter.js:95:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:183:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:173:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m11:41:58 PM[0m] File change detected. Starting incremental compilation...

[[90m11:41:58 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +15ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +1ms[39m
[31m[Nest] 93787  - [39m08/25/2025, 11:41:59 PM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +1ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-v_cd252036683558c8e092e5ab8d217a0d/node_modules/@nestjs/platform-express/adapters/express-adapter.js:95:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:183:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:173:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m11:42:10 PM[0m] File change detected. Starting incremental compilation...

[[90m11:42:10 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +13ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +1ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +1ms[39m
[31m[Nest] 93852  - [39m08/25/2025, 11:42:11 PM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +1ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-v_cd252036683558c8e092e5ab8d217a0d/node_modules/@nestjs/platform-express/adapters/express-adapter.js:95:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:183:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:173:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m11:42:17 PM[0m] File change detected. Starting incremental compilation...

[[90m11:42:17 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +8ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +3ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +1ms[39m
[31m[Nest] 93911  - [39m08/25/2025, 11:42:18 PM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +1ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-v_cd252036683558c8e092e5ab8d217a0d/node_modules/@nestjs/platform-express/adapters/express-adapter.js:95:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:183:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:173:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m11:43:03 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.service.ts[0m:[93m2[0m:[93m38[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/schedule' or its corresponding type declarations.

[7m2[0m import { Cron, CronExpression } from '@nestjs/schedule';
[7m [0m [91m                                     ~~~~~~~~~~~~~~~~~~[0m

[[90m11:43:03 PM[0m] Found 1 error. Watching for file changes.

[2J[3J[H[[90m11:43:09 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.service.ts[0m:[93m2[0m:[93m38[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/schedule' or its corresponding type declarations.

[7m2[0m import { Cron, CronExpression } from '@nestjs/schedule';
[7m [0m [91m                                     ~~~~~~~~~~~~~~~~~~[0m

[[90m11:43:09 PM[0m] Found 1 error. Watching for file changes.

[2J[3J[H[[90m11:43:16 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/schedule' or its corresponding type declarations.

[7m2[0m import { ScheduleModule } from '@nestjs/schedule';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m2[0m:[93m38[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/schedule' or its corresponding type declarations.

[7m2[0m import { Cron, CronExpression } from '@nestjs/schedule';
[7m [0m [91m                                     ~~~~~~~~~~~~~~~~~~[0m

[[90m11:43:16 PM[0m] Found 2 errors. Watching for file changes.

[2J[3J[H[[90m11:43:33 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/schedule' or its corresponding type declarations.

[7m2[0m import { ScheduleModule } from '@nestjs/schedule';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m11[0m:[93m29[0m - [91merror[0m[90m TS2304: [0mCannot find name 'PayoutsService'.

[7m11[0m     private payoutsService: PayoutsService,
[7m  [0m [91m                            ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m12[0m:[93m31[0m - [91merror[0m[90m TS2304: [0mCannot find name 'PositionsService'.

[7m12[0m     private positionsService: PositionsService,
[7m  [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m18[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m18[0m   @Cron('0 1 * * *', {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m39[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m39[0m   @Cron('0 */4 * * *', {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m70[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m70[0m   @Cron(CronExpression.EVERY_HOUR, {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m70[0m:[93m9[0m - [91merror[0m[90m TS2304: [0mCannot find name 'CronExpression'.

[7m70[0m   @Cron(CronExpression.EVERY_HOUR, {
[7m  [0m [91m        ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m96[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m96[0m   @Cron('0 2 * * *', {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m118[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m118[0m   @Cron('*/5 * * * *', {
[7m   [0m [91m   ~~~~[0m

[[90m11:43:33 PM[0m] Found 9 errors. Watching for file changes.

[2J[3J[H[[90m11:43:39 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/schedule' or its corresponding type declarations.

[7m2[0m import { ScheduleModule } from '@nestjs/schedule';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m18[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m18[0m   @Cron('0 1 * * *', {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m27[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m27[0m       await this.payoutsService.generateDailyPayouts();
[7m  [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m39[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m39[0m   @Cron('0 */4 * * *', {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m47[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m47[0m       const activePositions = await this.positionsService.getActivePositions();
[7m  [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m55[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m55[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m  [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m70[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m70[0m   @Cron(CronExpression.EVERY_HOUR, {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m70[0m:[93m9[0m - [91merror[0m[90m TS2304: [0mCannot find name 'CronExpression'.

[7m70[0m   @Cron(CronExpression.EVERY_HOUR, {
[7m  [0m [91m        ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m77[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m77[0m       const positionStats = await this.positionsService.getSystemPositionStats();
[7m  [0m [91m                                       ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m78[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m78[0m       const payoutStats = await this.payoutsService.getSystemPayoutStats();
[7m  [0m [91m                                     ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m96[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m96[0m   @Cron('0 2 * * *', {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m118[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m118[0m   @Cron('*/5 * * * *', {
[7m   [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m148[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m148[0m       await this.payoutsService.generateDailyPayouts();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m169[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m169[0m       const activePositions = await this.positionsService.getActivePositions();
[7m   [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m175[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m175[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m   [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m250[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m250[0m       await this.payoutsService.getSystemPayoutStats();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m264[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m264[0m       await this.positionsService.getActivePositions();
[7m   [0m [91m                 ~~~~~~~~~~~~~~~~[0m

[[90m11:43:39 PM[0m] Found 17 errors. Watching for file changes.

[2J[3J[H[[90m11:43:47 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/schedule' or its corresponding type declarations.

[7m2[0m import { ScheduleModule } from '@nestjs/schedule';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m27[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m27[0m       await this.payoutsService.generateDailyPayouts();
[7m  [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m39[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m39[0m   @Cron('0 */4 * * *', {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m47[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m47[0m       const activePositions = await this.positionsService.getActivePositions();
[7m  [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m55[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m55[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m  [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m70[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m70[0m   @Cron(CronExpression.EVERY_HOUR, {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m70[0m:[93m9[0m - [91merror[0m[90m TS2304: [0mCannot find name 'CronExpression'.

[7m70[0m   @Cron(CronExpression.EVERY_HOUR, {
[7m  [0m [91m        ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m77[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m77[0m       const positionStats = await this.positionsService.getSystemPositionStats();
[7m  [0m [91m                                       ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m78[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m78[0m       const payoutStats = await this.payoutsService.getSystemPayoutStats();
[7m  [0m [91m                                     ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m96[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m96[0m   @Cron('0 2 * * *', {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m118[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m118[0m   @Cron('*/5 * * * *', {
[7m   [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m148[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m148[0m       await this.payoutsService.generateDailyPayouts();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m169[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m169[0m       const activePositions = await this.positionsService.getActivePositions();
[7m   [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m175[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m175[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m   [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m250[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m250[0m       await this.payoutsService.getSystemPayoutStats();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m264[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m264[0m       await this.positionsService.getActivePositions();
[7m   [0m [91m                 ~~~~~~~~~~~~~~~~[0m

[[90m11:43:47 PM[0m] Found 16 errors. Watching for file changes.

[2J[3J[H[[90m11:43:54 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/schedule' or its corresponding type declarations.

[7m2[0m import { ScheduleModule } from '@nestjs/schedule';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m27[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m27[0m       await this.payoutsService.generateDailyPayouts();
[7m  [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m47[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m47[0m       const activePositions = await this.positionsService.getActivePositions();
[7m  [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m55[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m55[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m  [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m70[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m70[0m   @Cron(CronExpression.EVERY_HOUR, {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m70[0m:[93m9[0m - [91merror[0m[90m TS2304: [0mCannot find name 'CronExpression'.

[7m70[0m   @Cron(CronExpression.EVERY_HOUR, {
[7m  [0m [91m        ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m77[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m77[0m       const positionStats = await this.positionsService.getSystemPositionStats();
[7m  [0m [91m                                       ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m78[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m78[0m       const payoutStats = await this.payoutsService.getSystemPayoutStats();
[7m  [0m [91m                                     ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m96[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m96[0m   @Cron('0 2 * * *', {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m118[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m118[0m   @Cron('*/5 * * * *', {
[7m   [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m148[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m148[0m       await this.payoutsService.generateDailyPayouts();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m169[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m169[0m       const activePositions = await this.positionsService.getActivePositions();
[7m   [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m175[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m175[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m   [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m250[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m250[0m       await this.payoutsService.getSystemPayoutStats();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m264[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m264[0m       await this.positionsService.getActivePositions();
[7m   [0m [91m                 ~~~~~~~~~~~~~~~~[0m

[[90m11:43:54 PM[0m] Found 15 errors. Watching for file changes.

[2J[3J[H[[90m11:43:59 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/schedule' or its corresponding type declarations.

[7m2[0m import { ScheduleModule } from '@nestjs/schedule';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m27[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m27[0m       await this.payoutsService.generateDailyPayouts();
[7m  [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m47[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m47[0m       const activePositions = await this.positionsService.getActivePositions();
[7m  [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m55[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m55[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m  [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m77[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m77[0m       const positionStats = await this.positionsService.getSystemPositionStats();
[7m  [0m [91m                                       ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m78[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m78[0m       const payoutStats = await this.payoutsService.getSystemPayoutStats();
[7m  [0m [91m                                     ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m96[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m96[0m   @Cron('0 2 * * *', {
[7m  [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m118[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m118[0m   @Cron('*/5 * * * *', {
[7m   [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m148[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m148[0m       await this.payoutsService.generateDailyPayouts();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m169[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m169[0m       const activePositions = await this.positionsService.getActivePositions();
[7m   [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m175[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m175[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m   [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m250[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m250[0m       await this.payoutsService.getSystemPayoutStats();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m264[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m264[0m       await this.positionsService.getActivePositions();
[7m   [0m [91m                 ~~~~~~~~~~~~~~~~[0m

[[90m11:43:59 PM[0m] Found 13 errors. Watching for file changes.

[2J[3J[H[[90m11:44:05 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/schedule' or its corresponding type declarations.

[7m2[0m import { ScheduleModule } from '@nestjs/schedule';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m27[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m27[0m       await this.payoutsService.generateDailyPayouts();
[7m  [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m47[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m47[0m       const activePositions = await this.positionsService.getActivePositions();
[7m  [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m55[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m55[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m  [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m77[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m77[0m       const positionStats = await this.positionsService.getSystemPositionStats();
[7m  [0m [91m                                       ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m78[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m78[0m       const payoutStats = await this.payoutsService.getSystemPayoutStats();
[7m  [0m [91m                                     ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m118[0m:[93m4[0m - [91merror[0m[90m TS2304: [0mCannot find name 'Cron'.

[7m118[0m   @Cron('*/5 * * * *', {
[7m   [0m [91m   ~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m148[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m148[0m       await this.payoutsService.generateDailyPayouts();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m169[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m169[0m       const activePositions = await this.positionsService.getActivePositions();
[7m   [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m175[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m175[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m   [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m250[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m250[0m       await this.payoutsService.getSystemPayoutStats();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m264[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m264[0m       await this.positionsService.getActivePositions();
[7m   [0m [91m                 ~~~~~~~~~~~~~~~~[0m

[[90m11:44:05 PM[0m] Found 12 errors. Watching for file changes.

[2J[3J[H[[90m11:44:12 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/schedule' or its corresponding type declarations.

[7m2[0m import { ScheduleModule } from '@nestjs/schedule';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m27[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m27[0m       await this.payoutsService.generateDailyPayouts();
[7m  [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m47[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m47[0m       const activePositions = await this.positionsService.getActivePositions();
[7m  [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m55[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m55[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m  [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m77[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m77[0m       const positionStats = await this.positionsService.getSystemPositionStats();
[7m  [0m [91m                                       ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m78[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m78[0m       const payoutStats = await this.payoutsService.getSystemPayoutStats();
[7m  [0m [91m                                     ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m148[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m148[0m       await this.payoutsService.generateDailyPayouts();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m169[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m169[0m       const activePositions = await this.positionsService.getActivePositions();
[7m   [0m [91m                                         ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m175[0m:[93m22[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m175[0m           await this.positionsService.updatePositionStatus(position.id, 'REDEEMING');
[7m   [0m [91m                     ~~~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m250[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'payoutsService' does not exist on type 'SchedulerService'.

[7m250[0m       await this.payoutsService.getSystemPayoutStats();
[7m   [0m [91m                 ~~~~~~~~~~~~~~[0m

[96msrc/scheduler/scheduler.service.ts[0m:[93m264[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'SchedulerService'.

[7m264[0m       await this.positionsService.getActivePositions();
[7m   [0m [91m                 ~~~~~~~~~~~~~~~~[0m

[[90m11:44:12 PM[0m] Found 11 errors. Watching for file changes.

[2J[3J[H[[90m11:44:29 PM[0m] File change detected. Starting incremental compilation...

[[90m11:44:29 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +11ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +0ms[39m
[31m[Nest] 95129  - [39m08/25/2025, 11:44:30 PM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +1ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-v_cd252036683558c8e092e5ab8d217a0d/node_modules/@nestjs/platform-express/adapters/express-adapter.js:95:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:183:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:173:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m11:45:26 PM[0m] File change detected. Starting incremental compilation...

[[90m11:45:26 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +9ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +2ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +1ms[39m
[31m[Nest] 95562  - [39m08/25/2025, 11:45:27 PM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +1ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-v_cd252036683558c8e092e5ab8d217a0d/node_modules/@nestjs/platform-express/adapters/express-adapter.js:95:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:183:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/nest-application.js:173:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m11:45:44 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module './scheduler.controller' or its corresponding type declarations.

[7m2[0m import { SchedulerController } from './scheduler.controller';
[7m [0m [91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~[0m

[[90m11:45:44 PM[0m] Found 1 error. Watching for file changes.

[2J[3J[H[[90m11:46:13 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module './scheduler.controller' or its corresponding type declarations.

[7m2[0m import { SchedulerController } from './scheduler.controller';
[7m [0m [91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~[0m

[[90m11:46:14 PM[0m] Found 1 error. Watching for file changes.

[2J[3J[H[[90m11:46:19 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module './scheduler.controller' or its corresponding type declarations.

[7m2[0m import { SchedulerController } from './scheduler.controller';
[7m [0m [91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~[0m

[[90m11:46:19 PM[0m] Found 1 error. Watching for file changes.

[2J[3J[H[[90m11:46:34 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.module.ts[0m:[93m2[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module './scheduler.controller' or its corresponding type declarations.

[7m2[0m import { SchedulerController } from './scheduler.controller';
[7m [0m [91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~[0m

[[90m11:46:34 PM[0m] Found 1 error. Watching for file changes.

[2J[3J[H[[90m11:46:49 PM[0m] File change detected. Starting incremental compilation...

[[90m11:46:49 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 96404  - [39m08/25/2025, 11:46:50 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 96404  - [39m08/25/2025, 11:46:50 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 96404  - [39m08/25/2025, 11:46:50 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[31m[Nest] 96404  - [39m08/25/2025, 11:46:50 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39m[31mNest can't resolve dependencies of the MockOrdersService (MockDatabaseService, MockProductsService, ?). Please make sure that the argument PositionsService at index [2] is available in the MockModule context.

Potential solutions:
- Is MockModule a valid NestJS module?
- If PositionsService is a provider, is it part of the current MockModule?
- If PositionsService is exported from a separate @Module, is that module imported within MockModule?
  @Module({
    imports: [ /* the Module containing PositionsService */ ]
  })
[39m
Error: Nest can't resolve dependencies of the MockOrdersService (MockDatabaseService, MockProductsService, ?). Please make sure that the argument PositionsService at index [2] is available in the MockModule context.

Potential solutions:
- Is MockModule a valid NestJS module?
- If PositionsService is a provider, is it part of the current MockModule?
- If PositionsService is exported from a separate @Module, is that module imported within MockModule?
  @Module({
    imports: [ /* the Module containing PositionsService */ ]
  })

    at Injector.lookupComponentInParentModules (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:262:19)
    at async Injector.resolveComponentInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:215:33)
    at async resolveParam (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:129:38)
    at async Promise.all (index 2)
    at async Injector.resolveConstructorParams (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:144:27)
    at async Injector.loadInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:70:13)
    at async Injector.loadProvider (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:98:9)
    at async /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:56:13
    at async Promise.all (index 5)
    at async InstanceLoader.createInstancesOfProviders (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:55:9)
[2J[3J[H[[90m11:46:56 PM[0m] File change detected. Starting incremental compilation...

[96msrc/scheduler/scheduler.controller.ts[0m:[93m2[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module './scheduler.service' or its corresponding type declarations.

[7m2[0m import { SchedulerService } from './scheduler.service';
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~~~~[0m

[[90m11:46:56 PM[0m] Found 1 error. Watching for file changes.

[2J[3J[H[[90m11:47:07 PM[0m] File change detected. Starting incremental compilation...

[[90m11:47:07 PM[0m] Found 0 errors. Watching for file changes.

[32m[Nest] 96639  - [39m08/25/2025, 11:47:08 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 96639  - [39m08/25/2025, 11:47:08 PM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 96639  - [39m08/25/2025, 11:47:08 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[31m[Nest] 96639  - [39m08/25/2025, 11:47:08 PM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39m[31mNest can't resolve dependencies of the MockOrdersService (MockDatabaseService, MockProductsService, ?). Please make sure that the argument PositionsService at index [2] is available in the MockModule context.

Potential solutions:
- Is MockModule a valid NestJS module?
- If PositionsService is a provider, is it part of the current MockModule?
- If PositionsService is exported from a separate @Module, is that module imported within MockModule?
  @Module({
    imports: [ /* the Module containing PositionsService */ ]
  })
[39m
Error: Nest can't resolve dependencies of the MockOrdersService (MockDatabaseService, MockProductsService, ?). Please make sure that the argument PositionsService at index [2] is available in the MockModule context.

Potential solutions:
- Is MockModule a valid NestJS module?
- If PositionsService is a provider, is it part of the current MockModule?
- If PositionsService is exported from a separate @Module, is that module imported within MockModule?
  @Module({
    imports: [ /* the Module containing PositionsService */ ]
  })

    at Injector.lookupComponentInParentModules (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:262:19)
    at async Injector.resolveComponentInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:215:33)
    at async resolveParam (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:129:38)
    at async Promise.all (index 2)
    at async Injector.resolveConstructorParams (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:144:27)
    at async Injector.loadInstance (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:70:13)
    at async Injector.loadProvider (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/injector.js:98:9)
    at async /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:56:13
    at async Promise.all (index 5)
    at async InstanceLoader.createInstancesOfProviders (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@10.4.20_@nestjs+common@10.4.20_class-transformer@0.5.1_class-validator@0.1_aa1ce1d64c95416747e5462e815b82a9/node_modules/@nestjs/core/injector/instance-loader.js:55:9)
[2J[3J[H[[90m11:47:18 PM[0m] File change detected. Starting incremental compilation...

[96msrc/app.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/app.module.ts[0m:[93m2[0m:[93m45[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule, ConfigService } from '@nestjs/config';
[7m [0m [91m                                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.controller.ts[0m:[93m1[0m:[93m83[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Controller, Post, Body, UseGuards, Get, Req, HttpCode, HttpStatus } from '@nestjs/common';
[7m [0m [91m                                                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.controller.ts[0m:[93m2[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';
[7m [0m [91m                                                                  ~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m2[0m:[93m45[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule, ConfigService } from '@nestjs/config';
[7m [0m [91m                                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m3[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m3[0m import { JwtModule } from '@nestjs/jwt';
[7m [0m [91m                          ~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m4[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m4[0m import { PassportModule } from '@nestjs/passport';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m1[0m:[93m80[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                               ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m2[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m2[0m import { JwtService } from '@nestjs/jwt';
[7m [0m [91m                           ~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/public.decorator.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { SetMetadata } from '@nestjs/common';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { SetMetadata } from '@nestjs/common';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/dto/auth.dto.ts[0m:[93m2[0m:[93m50[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
[7m [0m [91m                                                 ~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m1[0m:[93m69[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, ExecutionContext, UnauthorizedException } from '@nestjs/common';
[7m [0m [91m                                                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m2[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m2[0m import { Reflector } from '@nestjs/core';
[7m [0m [91m                          ~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m3[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m3[0m import { AuthGuard } from '@nestjs/passport';
[7m [0m [91m                          ~~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m1[0m:[93m59[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';
[7m [0m [91m                                                          ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m2[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m2[0m import { Reflector } from '@nestjs/core';
[7m [0m [91m                          ~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/services/wallet-signature.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m1[0m:[93m51[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException } from '@nestjs/common';
[7m [0m [91m                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m3[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m3[0m import { PassportStrategy } from '@nestjs/passport';
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/contract.service.ts[0m:[93m1[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable } from '@nestjs/common';
[7m [0m [91m                           ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/contract.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.module.ts[0m:[93m1[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Global, Module } from '@nestjs/common';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m1[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, OnModuleInit, OnModuleDestroy, Logger } from '@nestjs/common';
[7m [0m [91m                                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/database/mock-database.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/health/health.controller.ts[0m:[93m1[0m:[93m33[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Controller, Get } from '@nestjs/common';
[7m [0m [91m                                ~~~~~~~~~~~~~~~~[0m

[96msrc/health/health.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m1[0m import { NestFactory } from '@nestjs/core';
[7m [0m [91m                            ~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m2[0m import { ValidationPipe } from '@nestjs/common';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m1[0m:[93m80[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                               ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m2[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m2[0m import { JwtService } from '@nestjs/jwt';
[7m [0m [91m                           ~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m2[0m:[93m63[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional, PartialType } from '@nestjs/swagger';
[7m [0m [91m                                                              ~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/mock-orders.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.controller.ts[0m:[93m8[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m8[0m } from '@nestjs/common';
[7m [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.controller.ts[0m:[93m10[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m10[0m import { Inject } from '@nestjs/common';
[7m  [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m13[0m:[93m25[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client/runtime/library' or its corresponding type declarations.

[7m13[0m import { Decimal } from '@prisma/client/runtime/library';
[7m  [0m [91m                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/payouts.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger, NotFoundException, BadRequestException } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.controller.ts[0m:[93m9[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m9[0m } from '@nestjs/common';
[7m [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger, NotFoundException, BadRequestException } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/products/dto/products.dto.ts[0m:[93m2[0m:[93m63[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional, PartialType } from '@nestjs/swagger';
[7m [0m [91m                                                              ~~~~~~~~~~~~~~~~~[0m

[96msrc/products/mock-products.service.ts[0m:[93m1[0m:[93m55[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, Logger } from '@nestjs/common';
[7m [0m [91m                                                      ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.controller.ts[0m:[93m12[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m12[0m } from '@nestjs/common';
[7m  [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.controller.ts[0m:[93m14[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m14[0m import { Inject } from '@nestjs/common';
[7m  [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m4[0m:[93m25[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client/runtime/library' or its corresponding type declarations.

[7m4[0m import { Decimal } from '@prisma/client/runtime/library';
[7m [0m [91m                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m311[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m311[0m     if (updateProductDto.symbol && updateProductDto.symbol !== existingProduct.symbol) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m311[0m:[93m53[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m311[0m     if (updateProductDto.symbol && updateProductDto.symbol !== existingProduct.symbol) {
[7m   [0m [91m                                                    ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m313[0m:[93m43[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m313[0m         where: { symbol: updateProductDto.symbol.toUpperCase() },
[7m   [0m [91m                                          ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m322[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m322[0m     if (updateProductDto.nftTokenId && updateProductDto.nftTokenId !== existingProduct.nftTokenId) {
[7m   [0m [91m                         ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m322[0m:[93m57[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m322[0m     if (updateProductDto.nftTokenId && updateProductDto.nftTokenId !== existingProduct.nftTokenId) {
[7m   [0m [91m                                                        ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m324[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m324[0m         where: { nftTokenId: updateProductDto.nftTokenId },
[7m   [0m [91m                                              ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m335[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m335[0m     if (updateProductDto.symbol) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m336[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m336[0m       updateData.symbol = updateProductDto.symbol.toUpperCase();
[7m   [0m [91m                                           ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m338[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'name' does not exist on type 'UpdateProductDto'.

[7m338[0m     if (updateProductDto.name) {
[7m   [0m [91m                         ~~~~[0m

[96msrc/products/products.service.ts[0m:[93m339[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'name' does not exist on type 'UpdateProductDto'.

[7m339[0m       updateData.name = updateProductDto.name;
[7m   [0m [91m                                         ~~~~[0m

[96msrc/products/products.service.ts[0m:[93m341[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'description' does not exist on type 'UpdateProductDto'.

[7m341[0m     if (updateProductDto.description !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m342[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'description' does not exist on type 'UpdateProductDto'.

[7m342[0m       updateData.description = updateProductDto.description;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m344[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'minAmount' does not exist on type 'UpdateProductDto'.

[7m344[0m     if (updateProductDto.minAmount) {
[7m   [0m [91m                         ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m345[0m:[93m59[0m - [91merror[0m[90m TS2339: [0mProperty 'minAmount' does not exist on type 'UpdateProductDto'.

[7m345[0m       updateData.minAmount = new Decimal(updateProductDto.minAmount);
[7m   [0m [91m                                                          ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m347[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m347[0m     if (updateProductDto.maxAmount !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m348[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m348[0m       updateData.maxAmount = updateProductDto.maxAmount ? new Decimal(updateProductDto.maxAmount) : null;
[7m   [0m [91m                                              ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m348[0m:[93m88[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m348[0m       updateData.maxAmount = updateProductDto.maxAmount ? new Decimal(updateProductDto.maxAmount) : null;
[7m   [0m [91m                                                                                       ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m350[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'apr' does not exist on type 'UpdateProductDto'.

[7m350[0m     if (updateProductDto.apr) {
[7m   [0m [91m                         ~~~[0m

[96msrc/products/products.service.ts[0m:[93m351[0m:[93m55[0m - [91merror[0m[90m TS2339: [0mProperty 'apr' does not exist on type 'UpdateProductDto'.

[7m351[0m       updateData.aprBps = Math.round(updateProductDto.apr * 100);
[7m   [0m [91m                                                      ~~~[0m

[96msrc/products/products.service.ts[0m:[93m353[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'lockDays' does not exist on type 'UpdateProductDto'.

[7m353[0m     if (updateProductDto.lockDays) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m354[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'lockDays' does not exist on type 'UpdateProductDto'.

[7m354[0m       updateData.lockDays = updateProductDto.lockDays;
[7m   [0m [91m                                             ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m356[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m356[0m     if (updateProductDto.nftTokenId !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m357[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m357[0m       updateData.nftTokenId = updateProductDto.nftTokenId;
[7m   [0m [91m                                               ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m359[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftMetadata' does not exist on type 'UpdateProductDto'.

[7m359[0m     if (updateProductDto.nftMetadata !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m360[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'nftMetadata' does not exist on type 'UpdateProductDto'.

[7m360[0m       updateData.nftMetadata = updateProductDto.nftMetadata;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m362[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'totalSupply' does not exist on type 'UpdateProductDto'.

[7m362[0m     if (updateProductDto.totalSupply !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m363[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'totalSupply' does not exist on type 'UpdateProductDto'.

[7m363[0m       updateData.totalSupply = updateProductDto.totalSupply;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m365[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'isActive' does not exist on type 'UpdateProductDto'.

[7m365[0m     if (updateProductDto.isActive !== undefined) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m366[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'isActive' does not exist on type 'UpdateProductDto'.

[7m366[0m       updateData.isActive = updateProductDto.isActive;
[7m   [0m [91m                                             ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m368[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'startsAt' does not exist on type 'UpdateProductDto'.

[7m368[0m     if (updateProductDto.startsAt) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m369[0m:[93m55[0m - [91merror[0m[90m TS2339: [0mProperty 'startsAt' does not exist on type 'UpdateProductDto'.

[7m369[0m       updateData.startsAt = new Date(updateProductDto.startsAt);
[7m   [0m [91m                                                      ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m371[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m371[0m     if (updateProductDto.endsAt !== undefined) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m372[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m372[0m       updateData.endsAt = updateProductDto.endsAt ? new Date(updateProductDto.endsAt) : null;
[7m   [0m [91m                                           ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m372[0m:[93m79[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m372[0m       updateData.endsAt = updateProductDto.endsAt ? new Date(updateProductDto.endsAt) : null;
[7m   [0m [91m                                                                              ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m2[0m:[93m50[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
[7m [0m [91m                                                 ~~~~~~~~~~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m15[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m15[0m } from '@nestjs/common';
[7m  [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m16[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m16[0m import { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';
[7m  [0m [91m                                                                  ~~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m11:47:20 PM[0m] Found 201 errors. Watching for file changes.

[2J[3J[H[[90m11:47:24 PM[0m] File change detected. Starting incremental compilation...

[96msrc/app.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/app.module.ts[0m:[93m2[0m:[93m45[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule, ConfigService } from '@nestjs/config';
[7m [0m [91m                                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.controller.ts[0m:[93m1[0m:[93m83[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Controller, Post, Body, UseGuards, Get, Req, HttpCode, HttpStatus } from '@nestjs/common';
[7m [0m [91m                                                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.controller.ts[0m:[93m2[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';
[7m [0m [91m                                                                  ~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m2[0m:[93m45[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule, ConfigService } from '@nestjs/config';
[7m [0m [91m                                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m3[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m3[0m import { JwtModule } from '@nestjs/jwt';
[7m [0m [91m                          ~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m4[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m4[0m import { PassportModule } from '@nestjs/passport';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m1[0m:[93m80[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                               ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m2[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m2[0m import { JwtService } from '@nestjs/jwt';
[7m [0m [91m                           ~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/public.decorator.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { SetMetadata } from '@nestjs/common';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { SetMetadata } from '@nestjs/common';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/dto/auth.dto.ts[0m:[93m2[0m:[93m50[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
[7m [0m [91m                                                 ~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m1[0m:[93m69[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, ExecutionContext, UnauthorizedException } from '@nestjs/common';
[7m [0m [91m                                                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m2[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m2[0m import { Reflector } from '@nestjs/core';
[7m [0m [91m                          ~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m3[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m3[0m import { AuthGuard } from '@nestjs/passport';
[7m [0m [91m                          ~~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m1[0m:[93m59[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';
[7m [0m [91m                                                          ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m2[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m2[0m import { Reflector } from '@nestjs/core';
[7m [0m [91m                          ~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/services/wallet-signature.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m1[0m:[93m51[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException } from '@nestjs/common';
[7m [0m [91m                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m3[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m3[0m import { PassportStrategy } from '@nestjs/passport';
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/contract.service.ts[0m:[93m1[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable } from '@nestjs/common';
[7m [0m [91m                           ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/contract.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.module.ts[0m:[93m1[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Global, Module } from '@nestjs/common';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m1[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, OnModuleInit, OnModuleDestroy, Logger } from '@nestjs/common';
[7m [0m [91m                                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/database/mock-database.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/health/health.controller.ts[0m:[93m1[0m:[93m33[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Controller, Get } from '@nestjs/common';
[7m [0m [91m                                ~~~~~~~~~~~~~~~~[0m

[96msrc/health/health.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m1[0m import { NestFactory } from '@nestjs/core';
[7m [0m [91m                            ~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m2[0m import { ValidationPipe } from '@nestjs/common';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m1[0m:[93m80[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                               ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m2[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m2[0m import { JwtService } from '@nestjs/jwt';
[7m [0m [91m                           ~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m7[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module '../scheduler/scheduler.service' or its corresponding type declarations.

[7m7[0m import { SchedulerService } from '../scheduler/scheduler.service';
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m11[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '../scheduler/scheduler.controller' or its corresponding type declarations.

[7m11[0m import { SchedulerController } from '../scheduler/scheduler.controller';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m2[0m:[93m63[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional, PartialType } from '@nestjs/swagger';
[7m [0m [91m                                                              ~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/mock-orders.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.controller.ts[0m:[93m8[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m8[0m } from '@nestjs/common';
[7m [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.controller.ts[0m:[93m10[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m10[0m import { Inject } from '@nestjs/common';
[7m  [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m13[0m:[93m25[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client/runtime/library' or its corresponding type declarations.

[7m13[0m import { Decimal } from '@prisma/client/runtime/library';
[7m  [0m [91m                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/payouts.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger, NotFoundException, BadRequestException } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.controller.ts[0m:[93m9[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m9[0m } from '@nestjs/common';
[7m [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger, NotFoundException, BadRequestException } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/products/dto/products.dto.ts[0m:[93m2[0m:[93m63[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional, PartialType } from '@nestjs/swagger';
[7m [0m [91m                                                              ~~~~~~~~~~~~~~~~~[0m

[96msrc/products/mock-products.service.ts[0m:[93m1[0m:[93m55[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, Logger } from '@nestjs/common';
[7m [0m [91m                                                      ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.controller.ts[0m:[93m12[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m12[0m } from '@nestjs/common';
[7m  [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.controller.ts[0m:[93m14[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m14[0m import { Inject } from '@nestjs/common';
[7m  [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m4[0m:[93m25[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client/runtime/library' or its corresponding type declarations.

[7m4[0m import { Decimal } from '@prisma/client/runtime/library';
[7m [0m [91m                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m311[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m311[0m     if (updateProductDto.symbol && updateProductDto.symbol !== existingProduct.symbol) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m311[0m:[93m53[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m311[0m     if (updateProductDto.symbol && updateProductDto.symbol !== existingProduct.symbol) {
[7m   [0m [91m                                                    ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m313[0m:[93m43[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m313[0m         where: { symbol: updateProductDto.symbol.toUpperCase() },
[7m   [0m [91m                                          ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m322[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m322[0m     if (updateProductDto.nftTokenId && updateProductDto.nftTokenId !== existingProduct.nftTokenId) {
[7m   [0m [91m                         ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m322[0m:[93m57[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m322[0m     if (updateProductDto.nftTokenId && updateProductDto.nftTokenId !== existingProduct.nftTokenId) {
[7m   [0m [91m                                                        ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m324[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m324[0m         where: { nftTokenId: updateProductDto.nftTokenId },
[7m   [0m [91m                                              ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m335[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m335[0m     if (updateProductDto.symbol) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m336[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m336[0m       updateData.symbol = updateProductDto.symbol.toUpperCase();
[7m   [0m [91m                                           ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m338[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'name' does not exist on type 'UpdateProductDto'.

[7m338[0m     if (updateProductDto.name) {
[7m   [0m [91m                         ~~~~[0m

[96msrc/products/products.service.ts[0m:[93m339[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'name' does not exist on type 'UpdateProductDto'.

[7m339[0m       updateData.name = updateProductDto.name;
[7m   [0m [91m                                         ~~~~[0m

[96msrc/products/products.service.ts[0m:[93m341[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'description' does not exist on type 'UpdateProductDto'.

[7m341[0m     if (updateProductDto.description !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m342[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'description' does not exist on type 'UpdateProductDto'.

[7m342[0m       updateData.description = updateProductDto.description;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m344[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'minAmount' does not exist on type 'UpdateProductDto'.

[7m344[0m     if (updateProductDto.minAmount) {
[7m   [0m [91m                         ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m345[0m:[93m59[0m - [91merror[0m[90m TS2339: [0mProperty 'minAmount' does not exist on type 'UpdateProductDto'.

[7m345[0m       updateData.minAmount = new Decimal(updateProductDto.minAmount);
[7m   [0m [91m                                                          ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m347[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m347[0m     if (updateProductDto.maxAmount !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m348[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m348[0m       updateData.maxAmount = updateProductDto.maxAmount ? new Decimal(updateProductDto.maxAmount) : null;
[7m   [0m [91m                                              ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m348[0m:[93m88[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m348[0m       updateData.maxAmount = updateProductDto.maxAmount ? new Decimal(updateProductDto.maxAmount) : null;
[7m   [0m [91m                                                                                       ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m350[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'apr' does not exist on type 'UpdateProductDto'.

[7m350[0m     if (updateProductDto.apr) {
[7m   [0m [91m                         ~~~[0m

[96msrc/products/products.service.ts[0m:[93m351[0m:[93m55[0m - [91merror[0m[90m TS2339: [0mProperty 'apr' does not exist on type 'UpdateProductDto'.

[7m351[0m       updateData.aprBps = Math.round(updateProductDto.apr * 100);
[7m   [0m [91m                                                      ~~~[0m

[96msrc/products/products.service.ts[0m:[93m353[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'lockDays' does not exist on type 'UpdateProductDto'.

[7m353[0m     if (updateProductDto.lockDays) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m354[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'lockDays' does not exist on type 'UpdateProductDto'.

[7m354[0m       updateData.lockDays = updateProductDto.lockDays;
[7m   [0m [91m                                             ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m356[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m356[0m     if (updateProductDto.nftTokenId !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m357[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m357[0m       updateData.nftTokenId = updateProductDto.nftTokenId;
[7m   [0m [91m                                               ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m359[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftMetadata' does not exist on type 'UpdateProductDto'.

[7m359[0m     if (updateProductDto.nftMetadata !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m360[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'nftMetadata' does not exist on type 'UpdateProductDto'.

[7m360[0m       updateData.nftMetadata = updateProductDto.nftMetadata;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m362[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'totalSupply' does not exist on type 'UpdateProductDto'.

[7m362[0m     if (updateProductDto.totalSupply !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m363[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'totalSupply' does not exist on type 'UpdateProductDto'.

[7m363[0m       updateData.totalSupply = updateProductDto.totalSupply;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m365[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'isActive' does not exist on type 'UpdateProductDto'.

[7m365[0m     if (updateProductDto.isActive !== undefined) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m366[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'isActive' does not exist on type 'UpdateProductDto'.

[7m366[0m       updateData.isActive = updateProductDto.isActive;
[7m   [0m [91m                                             ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m368[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'startsAt' does not exist on type 'UpdateProductDto'.

[7m368[0m     if (updateProductDto.startsAt) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m369[0m:[93m55[0m - [91merror[0m[90m TS2339: [0mProperty 'startsAt' does not exist on type 'UpdateProductDto'.

[7m369[0m       updateData.startsAt = new Date(updateProductDto.startsAt);
[7m   [0m [91m                                                      ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m371[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m371[0m     if (updateProductDto.endsAt !== undefined) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m372[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m372[0m       updateData.endsAt = updateProductDto.endsAt ? new Date(updateProductDto.endsAt) : null;
[7m   [0m [91m                                           ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m372[0m:[93m79[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m372[0m       updateData.endsAt = updateProductDto.endsAt ? new Date(updateProductDto.endsAt) : null;
[7m   [0m [91m                                                                              ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m2[0m:[93m50[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
[7m [0m [91m                                                 ~~~~~~~~~~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m15[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m15[0m } from '@nestjs/common';
[7m  [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m16[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m16[0m import { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';
[7m  [0m [91m                                                                  ~~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m11:47:24 PM[0m] Found 203 errors. Watching for file changes.

[2J[3J[H[[90m11:47:33 PM[0m] File change detected. Starting incremental compilation...

[96msrc/app.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/app.module.ts[0m:[93m2[0m:[93m45[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule, ConfigService } from '@nestjs/config';
[7m [0m [91m                                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.controller.ts[0m:[93m1[0m:[93m83[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Controller, Post, Body, UseGuards, Get, Req, HttpCode, HttpStatus } from '@nestjs/common';
[7m [0m [91m                                                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.controller.ts[0m:[93m2[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';
[7m [0m [91m                                                                  ~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m2[0m:[93m45[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule, ConfigService } from '@nestjs/config';
[7m [0m [91m                                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m3[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m3[0m import { JwtModule } from '@nestjs/jwt';
[7m [0m [91m                          ~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m4[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m4[0m import { PassportModule } from '@nestjs/passport';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m1[0m:[93m80[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                               ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m2[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m2[0m import { JwtService } from '@nestjs/jwt';
[7m [0m [91m                           ~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/public.decorator.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { SetMetadata } from '@nestjs/common';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { SetMetadata } from '@nestjs/common';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/dto/auth.dto.ts[0m:[93m2[0m:[93m50[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
[7m [0m [91m                                                 ~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m1[0m:[93m69[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, ExecutionContext, UnauthorizedException } from '@nestjs/common';
[7m [0m [91m                                                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m2[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m2[0m import { Reflector } from '@nestjs/core';
[7m [0m [91m                          ~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m3[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m3[0m import { AuthGuard } from '@nestjs/passport';
[7m [0m [91m                          ~~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m1[0m:[93m59[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';
[7m [0m [91m                                                          ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m2[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m2[0m import { Reflector } from '@nestjs/core';
[7m [0m [91m                          ~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/services/wallet-signature.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m1[0m:[93m51[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException } from '@nestjs/common';
[7m [0m [91m                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m3[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m3[0m import { PassportStrategy } from '@nestjs/passport';
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/contract.service.ts[0m:[93m1[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable } from '@nestjs/common';
[7m [0m [91m                           ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/contract.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.module.ts[0m:[93m1[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Global, Module } from '@nestjs/common';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m1[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, OnModuleInit, OnModuleDestroy, Logger } from '@nestjs/common';
[7m [0m [91m                                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/database/mock-database.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/health/health.controller.ts[0m:[93m1[0m:[93m33[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Controller, Get } from '@nestjs/common';
[7m [0m [91m                                ~~~~~~~~~~~~~~~~[0m

[96msrc/health/health.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m1[0m import { NestFactory } from '@nestjs/core';
[7m [0m [91m                            ~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m2[0m import { ValidationPipe } from '@nestjs/common';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m1[0m:[93m80[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                               ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m2[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m2[0m import { JwtService } from '@nestjs/jwt';
[7m [0m [91m                           ~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m7[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module '../scheduler/scheduler.service' or its corresponding type declarations.

[7m7[0m import { SchedulerService } from '../scheduler/scheduler.service';
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m11[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '../scheduler/scheduler.controller' or its corresponding type declarations.

[7m11[0m import { SchedulerController } from '../scheduler/scheduler.controller';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m2[0m:[93m63[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional, PartialType } from '@nestjs/swagger';
[7m [0m [91m                                                              ~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/mock-orders.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/mock-orders.service.ts[0m:[93m13[0m:[93m31[0m - [91merror[0m[90m TS2304: [0mCannot find name 'PositionsService'.

[7m13[0m     private positionsService: PositionsService,
[7m  [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.controller.ts[0m:[93m8[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m8[0m } from '@nestjs/common';
[7m [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.controller.ts[0m:[93m10[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m10[0m import { Inject } from '@nestjs/common';
[7m  [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m13[0m:[93m25[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client/runtime/library' or its corresponding type declarations.

[7m13[0m import { Decimal } from '@prisma/client/runtime/library';
[7m  [0m [91m                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/payouts.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger, NotFoundException, BadRequestException } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.controller.ts[0m:[93m9[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m9[0m } from '@nestjs/common';
[7m [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger, NotFoundException, BadRequestException } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/products/dto/products.dto.ts[0m:[93m2[0m:[93m63[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional, PartialType } from '@nestjs/swagger';
[7m [0m [91m                                                              ~~~~~~~~~~~~~~~~~[0m

[96msrc/products/mock-products.service.ts[0m:[93m1[0m:[93m55[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, Logger } from '@nestjs/common';
[7m [0m [91m                                                      ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.controller.ts[0m:[93m12[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m12[0m } from '@nestjs/common';
[7m  [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.controller.ts[0m:[93m14[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m14[0m import { Inject } from '@nestjs/common';
[7m  [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m4[0m:[93m25[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client/runtime/library' or its corresponding type declarations.

[7m4[0m import { Decimal } from '@prisma/client/runtime/library';
[7m [0m [91m                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m311[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m311[0m     if (updateProductDto.symbol && updateProductDto.symbol !== existingProduct.symbol) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m311[0m:[93m53[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m311[0m     if (updateProductDto.symbol && updateProductDto.symbol !== existingProduct.symbol) {
[7m   [0m [91m                                                    ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m313[0m:[93m43[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m313[0m         where: { symbol: updateProductDto.symbol.toUpperCase() },
[7m   [0m [91m                                          ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m322[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m322[0m     if (updateProductDto.nftTokenId && updateProductDto.nftTokenId !== existingProduct.nftTokenId) {
[7m   [0m [91m                         ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m322[0m:[93m57[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m322[0m     if (updateProductDto.nftTokenId && updateProductDto.nftTokenId !== existingProduct.nftTokenId) {
[7m   [0m [91m                                                        ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m324[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m324[0m         where: { nftTokenId: updateProductDto.nftTokenId },
[7m   [0m [91m                                              ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m335[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m335[0m     if (updateProductDto.symbol) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m336[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m336[0m       updateData.symbol = updateProductDto.symbol.toUpperCase();
[7m   [0m [91m                                           ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m338[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'name' does not exist on type 'UpdateProductDto'.

[7m338[0m     if (updateProductDto.name) {
[7m   [0m [91m                         ~~~~[0m

[96msrc/products/products.service.ts[0m:[93m339[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'name' does not exist on type 'UpdateProductDto'.

[7m339[0m       updateData.name = updateProductDto.name;
[7m   [0m [91m                                         ~~~~[0m

[96msrc/products/products.service.ts[0m:[93m341[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'description' does not exist on type 'UpdateProductDto'.

[7m341[0m     if (updateProductDto.description !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m342[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'description' does not exist on type 'UpdateProductDto'.

[7m342[0m       updateData.description = updateProductDto.description;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m344[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'minAmount' does not exist on type 'UpdateProductDto'.

[7m344[0m     if (updateProductDto.minAmount) {
[7m   [0m [91m                         ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m345[0m:[93m59[0m - [91merror[0m[90m TS2339: [0mProperty 'minAmount' does not exist on type 'UpdateProductDto'.

[7m345[0m       updateData.minAmount = new Decimal(updateProductDto.minAmount);
[7m   [0m [91m                                                          ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m347[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m347[0m     if (updateProductDto.maxAmount !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m348[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m348[0m       updateData.maxAmount = updateProductDto.maxAmount ? new Decimal(updateProductDto.maxAmount) : null;
[7m   [0m [91m                                              ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m348[0m:[93m88[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m348[0m       updateData.maxAmount = updateProductDto.maxAmount ? new Decimal(updateProductDto.maxAmount) : null;
[7m   [0m [91m                                                                                       ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m350[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'apr' does not exist on type 'UpdateProductDto'.

[7m350[0m     if (updateProductDto.apr) {
[7m   [0m [91m                         ~~~[0m

[96msrc/products/products.service.ts[0m:[93m351[0m:[93m55[0m - [91merror[0m[90m TS2339: [0mProperty 'apr' does not exist on type 'UpdateProductDto'.

[7m351[0m       updateData.aprBps = Math.round(updateProductDto.apr * 100);
[7m   [0m [91m                                                      ~~~[0m

[96msrc/products/products.service.ts[0m:[93m353[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'lockDays' does not exist on type 'UpdateProductDto'.

[7m353[0m     if (updateProductDto.lockDays) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m354[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'lockDays' does not exist on type 'UpdateProductDto'.

[7m354[0m       updateData.lockDays = updateProductDto.lockDays;
[7m   [0m [91m                                             ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m356[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m356[0m     if (updateProductDto.nftTokenId !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m357[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m357[0m       updateData.nftTokenId = updateProductDto.nftTokenId;
[7m   [0m [91m                                               ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m359[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftMetadata' does not exist on type 'UpdateProductDto'.

[7m359[0m     if (updateProductDto.nftMetadata !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m360[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'nftMetadata' does not exist on type 'UpdateProductDto'.

[7m360[0m       updateData.nftMetadata = updateProductDto.nftMetadata;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m362[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'totalSupply' does not exist on type 'UpdateProductDto'.

[7m362[0m     if (updateProductDto.totalSupply !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m363[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'totalSupply' does not exist on type 'UpdateProductDto'.

[7m363[0m       updateData.totalSupply = updateProductDto.totalSupply;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m365[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'isActive' does not exist on type 'UpdateProductDto'.

[7m365[0m     if (updateProductDto.isActive !== undefined) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m366[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'isActive' does not exist on type 'UpdateProductDto'.

[7m366[0m       updateData.isActive = updateProductDto.isActive;
[7m   [0m [91m                                             ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m368[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'startsAt' does not exist on type 'UpdateProductDto'.

[7m368[0m     if (updateProductDto.startsAt) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m369[0m:[93m55[0m - [91merror[0m[90m TS2339: [0mProperty 'startsAt' does not exist on type 'UpdateProductDto'.

[7m369[0m       updateData.startsAt = new Date(updateProductDto.startsAt);
[7m   [0m [91m                                                      ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m371[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m371[0m     if (updateProductDto.endsAt !== undefined) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m372[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m372[0m       updateData.endsAt = updateProductDto.endsAt ? new Date(updateProductDto.endsAt) : null;
[7m   [0m [91m                                           ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m372[0m:[93m79[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m372[0m       updateData.endsAt = updateProductDto.endsAt ? new Date(updateProductDto.endsAt) : null;
[7m   [0m [91m                                                                              ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m2[0m:[93m50[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
[7m [0m [91m                                                 ~~~~~~~~~~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m15[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m15[0m } from '@nestjs/common';
[7m  [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m16[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m16[0m import { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';
[7m  [0m [91m                                                                  ~~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m11:47:33 PM[0m] Found 204 errors. Watching for file changes.

[2J[3J[H[[90m11:47:39 PM[0m] File change detected. Starting incremental compilation...

[96msrc/app.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/app.module.ts[0m:[93m2[0m:[93m45[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule, ConfigService } from '@nestjs/config';
[7m [0m [91m                                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.controller.ts[0m:[93m1[0m:[93m83[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Controller, Post, Body, UseGuards, Get, Req, HttpCode, HttpStatus } from '@nestjs/common';
[7m [0m [91m                                                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.controller.ts[0m:[93m2[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';
[7m [0m [91m                                                                  ~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m2[0m:[93m45[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule, ConfigService } from '@nestjs/config';
[7m [0m [91m                                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m3[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m3[0m import { JwtModule } from '@nestjs/jwt';
[7m [0m [91m                          ~~~~~~~~~~~~~[0m

[96msrc/auth/auth.module.ts[0m:[93m4[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m4[0m import { PassportModule } from '@nestjs/passport';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m1[0m:[93m80[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                               ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m2[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m2[0m import { JwtService } from '@nestjs/jwt';
[7m [0m [91m                           ~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/public.decorator.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { SetMetadata } from '@nestjs/common';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { SetMetadata } from '@nestjs/common';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/dto/auth.dto.ts[0m:[93m2[0m:[93m50[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
[7m [0m [91m                                                 ~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m1[0m:[93m69[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, ExecutionContext, UnauthorizedException } from '@nestjs/common';
[7m [0m [91m                                                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m2[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m2[0m import { Reflector } from '@nestjs/core';
[7m [0m [91m                          ~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/jwt-auth.guard.ts[0m:[93m3[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m3[0m import { AuthGuard } from '@nestjs/passport';
[7m [0m [91m                          ~~~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m1[0m:[93m59[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';
[7m [0m [91m                                                          ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m2[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m2[0m import { Reflector } from '@nestjs/core';
[7m [0m [91m                          ~~~~~~~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/services/wallet-signature.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m1[0m:[93m51[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException } from '@nestjs/common';
[7m [0m [91m                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/auth/strategies/jwt.strategy.ts[0m:[93m3[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/passport' or its corresponding type declarations.

[7m3[0m import { PassportStrategy } from '@nestjs/passport';
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/blockchain.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/contract.service.ts[0m:[93m1[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable } from '@nestjs/common';
[7m [0m [91m                           ~~~~~~~~~~~~~~~~[0m

[96msrc/blockchain/contract.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.module.ts[0m:[93m1[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Global, Module } from '@nestjs/common';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m1[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, OnModuleInit, OnModuleDestroy, Logger } from '@nestjs/common';
[7m [0m [91m                                                                  ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/database/mock-database.service.ts[0m:[93m1[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger } from '@nestjs/common';
[7m [0m [91m                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/health/health.controller.ts[0m:[93m1[0m:[93m33[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Controller, Get } from '@nestjs/common';
[7m [0m [91m                                ~~~~~~~~~~~~~~~~[0m

[96msrc/health/health.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m1[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/core' or its corresponding type declarations.

[7m1[0m import { NestFactory } from '@nestjs/core';
[7m [0m [91m                            ~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m2[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m2[0m import { ValidationPipe } from '@nestjs/common';
[7m [0m [91m                               ~~~~~~~~~~~~~~~~[0m

[96msrc/main.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m1[0m:[93m80[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, UnauthorizedException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                               ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m2[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/jwt' or its corresponding type declarations.

[7m2[0m import { JwtService } from '@nestjs/jwt';
[7m [0m [91m                           ~~~~~~~~~~~~~[0m

[96msrc/mock/mock-auth.service.ts[0m:[93m3[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m3[0m import { ConfigService } from '@nestjs/config';
[7m [0m [91m                              ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m7[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module '../scheduler/scheduler.service' or its corresponding type declarations.

[7m7[0m import { SchedulerService } from '../scheduler/scheduler.service';
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m11[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '../scheduler/scheduler.controller' or its corresponding type declarations.

[7m11[0m import { SchedulerController } from '../scheduler/scheduler.controller';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m2[0m:[93m63[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional, PartialType } from '@nestjs/swagger';
[7m [0m [91m                                                              ~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/mock-orders.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/mock-orders.service.ts[0m:[93m154[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'MockOrdersService'.

[7m154[0m           const position = await this.positionsService.createPosition(updatedOrder, product);
[7m   [0m [91m                                      ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.controller.ts[0m:[93m8[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m8[0m } from '@nestjs/common';
[7m [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.controller.ts[0m:[93m10[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m10[0m import { Inject } from '@nestjs/common';
[7m  [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m29[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m                            ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m13[0m:[93m25[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client/runtime/library' or its corresponding type declarations.

[7m13[0m import { Decimal } from '@prisma/client/runtime/library';
[7m  [0m [91m                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/payouts.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger, NotFoundException, BadRequestException } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.controller.ts[0m:[93m9[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m9[0m } from '@nestjs/common';
[7m [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/positions/positions.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, Logger, NotFoundException, BadRequestException } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/products/dto/products.dto.ts[0m:[93m2[0m:[93m63[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional, PartialType } from '@nestjs/swagger';
[7m [0m [91m                                                              ~~~~~~~~~~~~~~~~~[0m

[96msrc/products/mock-products.service.ts[0m:[93m1[0m:[93m55[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, Logger } from '@nestjs/common';
[7m [0m [91m                                                      ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.controller.ts[0m:[93m12[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m12[0m } from '@nestjs/common';
[7m  [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.controller.ts[0m:[93m14[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m14[0m import { Inject } from '@nestjs/common';
[7m  [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m4[0m:[93m25[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client/runtime/library' or its corresponding type declarations.

[7m4[0m import { Decimal } from '@prisma/client/runtime/library';
[7m [0m [91m                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m311[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m311[0m     if (updateProductDto.symbol && updateProductDto.symbol !== existingProduct.symbol) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m311[0m:[93m53[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m311[0m     if (updateProductDto.symbol && updateProductDto.symbol !== existingProduct.symbol) {
[7m   [0m [91m                                                    ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m313[0m:[93m43[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m313[0m         where: { symbol: updateProductDto.symbol.toUpperCase() },
[7m   [0m [91m                                          ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m322[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m322[0m     if (updateProductDto.nftTokenId && updateProductDto.nftTokenId !== existingProduct.nftTokenId) {
[7m   [0m [91m                         ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m322[0m:[93m57[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m322[0m     if (updateProductDto.nftTokenId && updateProductDto.nftTokenId !== existingProduct.nftTokenId) {
[7m   [0m [91m                                                        ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m324[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m324[0m         where: { nftTokenId: updateProductDto.nftTokenId },
[7m   [0m [91m                                              ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m335[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m335[0m     if (updateProductDto.symbol) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m336[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'symbol' does not exist on type 'UpdateProductDto'.

[7m336[0m       updateData.symbol = updateProductDto.symbol.toUpperCase();
[7m   [0m [91m                                           ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m338[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'name' does not exist on type 'UpdateProductDto'.

[7m338[0m     if (updateProductDto.name) {
[7m   [0m [91m                         ~~~~[0m

[96msrc/products/products.service.ts[0m:[93m339[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'name' does not exist on type 'UpdateProductDto'.

[7m339[0m       updateData.name = updateProductDto.name;
[7m   [0m [91m                                         ~~~~[0m

[96msrc/products/products.service.ts[0m:[93m341[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'description' does not exist on type 'UpdateProductDto'.

[7m341[0m     if (updateProductDto.description !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m342[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'description' does not exist on type 'UpdateProductDto'.

[7m342[0m       updateData.description = updateProductDto.description;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m344[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'minAmount' does not exist on type 'UpdateProductDto'.

[7m344[0m     if (updateProductDto.minAmount) {
[7m   [0m [91m                         ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m345[0m:[93m59[0m - [91merror[0m[90m TS2339: [0mProperty 'minAmount' does not exist on type 'UpdateProductDto'.

[7m345[0m       updateData.minAmount = new Decimal(updateProductDto.minAmount);
[7m   [0m [91m                                                          ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m347[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m347[0m     if (updateProductDto.maxAmount !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m348[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m348[0m       updateData.maxAmount = updateProductDto.maxAmount ? new Decimal(updateProductDto.maxAmount) : null;
[7m   [0m [91m                                              ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m348[0m:[93m88[0m - [91merror[0m[90m TS2339: [0mProperty 'maxAmount' does not exist on type 'UpdateProductDto'.

[7m348[0m       updateData.maxAmount = updateProductDto.maxAmount ? new Decimal(updateProductDto.maxAmount) : null;
[7m   [0m [91m                                                                                       ~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m350[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'apr' does not exist on type 'UpdateProductDto'.

[7m350[0m     if (updateProductDto.apr) {
[7m   [0m [91m                         ~~~[0m

[96msrc/products/products.service.ts[0m:[93m351[0m:[93m55[0m - [91merror[0m[90m TS2339: [0mProperty 'apr' does not exist on type 'UpdateProductDto'.

[7m351[0m       updateData.aprBps = Math.round(updateProductDto.apr * 100);
[7m   [0m [91m                                                      ~~~[0m

[96msrc/products/products.service.ts[0m:[93m353[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'lockDays' does not exist on type 'UpdateProductDto'.

[7m353[0m     if (updateProductDto.lockDays) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m354[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'lockDays' does not exist on type 'UpdateProductDto'.

[7m354[0m       updateData.lockDays = updateProductDto.lockDays;
[7m   [0m [91m                                             ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m356[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m356[0m     if (updateProductDto.nftTokenId !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m357[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'nftTokenId' does not exist on type 'UpdateProductDto'.

[7m357[0m       updateData.nftTokenId = updateProductDto.nftTokenId;
[7m   [0m [91m                                               ~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m359[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'nftMetadata' does not exist on type 'UpdateProductDto'.

[7m359[0m     if (updateProductDto.nftMetadata !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m360[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'nftMetadata' does not exist on type 'UpdateProductDto'.

[7m360[0m       updateData.nftMetadata = updateProductDto.nftMetadata;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m362[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'totalSupply' does not exist on type 'UpdateProductDto'.

[7m362[0m     if (updateProductDto.totalSupply !== undefined) {
[7m   [0m [91m                         ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m363[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'totalSupply' does not exist on type 'UpdateProductDto'.

[7m363[0m       updateData.totalSupply = updateProductDto.totalSupply;
[7m   [0m [91m                                                ~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m365[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'isActive' does not exist on type 'UpdateProductDto'.

[7m365[0m     if (updateProductDto.isActive !== undefined) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m366[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'isActive' does not exist on type 'UpdateProductDto'.

[7m366[0m       updateData.isActive = updateProductDto.isActive;
[7m   [0m [91m                                             ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m368[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'startsAt' does not exist on type 'UpdateProductDto'.

[7m368[0m     if (updateProductDto.startsAt) {
[7m   [0m [91m                         ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m369[0m:[93m55[0m - [91merror[0m[90m TS2339: [0mProperty 'startsAt' does not exist on type 'UpdateProductDto'.

[7m369[0m       updateData.startsAt = new Date(updateProductDto.startsAt);
[7m   [0m [91m                                                      ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m371[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m371[0m     if (updateProductDto.endsAt !== undefined) {
[7m   [0m [91m                         ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m372[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m372[0m       updateData.endsAt = updateProductDto.endsAt ? new Date(updateProductDto.endsAt) : null;
[7m   [0m [91m                                           ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m372[0m:[93m79[0m - [91merror[0m[90m TS2339: [0mProperty 'endsAt' does not exist on type 'UpdateProductDto'.

[7m372[0m       updateData.endsAt = updateProductDto.endsAt ? new Date(updateProductDto.endsAt) : null;
[7m   [0m [91m                                                                              ~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m2[0m:[93m50[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m2[0m import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
[7m [0m [91m                                                 ~~~~~~~~~~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m15[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m15[0m } from '@nestjs/common';
[7m  [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m16[0m:[93m67[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/swagger' or its corresponding type declarations.

[7m16[0m import { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';
[7m  [0m [91m                                                                  ~~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m                         ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.module.ts[0m:[93m1[0m:[93m24[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Module } from '@nestjs/common';
[7m [0m [91m                       ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.module.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/config' or its corresponding type declarations.

[7m2[0m import { ConfigModule } from '@nestjs/config';
[7m [0m [91m                             ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m1[0m:[93m76[0m - [91merror[0m[90m TS2307: [0mCannot find module '@nestjs/common' or its corresponding type declarations.

[7m1[0m import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';
[7m [0m [91m                                                                           ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '@prisma/client' or its corresponding type declarations.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m11:47:39 PM[0m] Found 204 errors. Watching for file changes.

[2J[3J[H[[90m11:47:46 PM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m7[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module '../scheduler/scheduler.service' or its corresponding type declarations.

[7m7[0m import { SchedulerService } from '../scheduler/scheduler.service';
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m11[0m:[93m37[0m - [91merror[0m[90m TS2307: [0mCannot find module '../scheduler/scheduler.controller' or its corresponding type declarations.

[7m11[0m import { SchedulerController } from '../scheduler/scheduler.controller';
[7m  [0m [91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/mock-orders.service.ts[0m:[93m154[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'MockOrdersService'.

[7m154[0m           const position = await this.positionsService.createPosition(updatedOrder, product);
[7m   [0m [91m                                      ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m11:47:47 PM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:06:44 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m16[0m:[93m5[0m - [91merror[0m[90m TS2304: [0mCannot find name 'SchedulerController'.

[7m16[0m     SchedulerController,
[7m  [0m [91m    ~~~~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m24[0m:[93m5[0m - [91merror[0m[90m TS2304: [0mCannot find name 'SchedulerService'.

[7m24[0m     SchedulerService,
[7m  [0m [91m    ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m34[0m:[93m68[0m - [91merror[0m[90m TS2304: [0mCannot find name 'SchedulerService'.

[7m34[0m   exports: [MockDatabaseService, PayoutsService, PositionsService, SchedulerService],
[7m  [0m [91m                                                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/mock-orders.service.ts[0m:[93m154[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'MockOrdersService'.

[7m154[0m           const position = await this.positionsService.createPosition(updatedOrder, product);
[7m   [0m [91m                                      ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:06:44 AM[0m] Found 105 errors. Watching for file changes.

[2J[3J[H[[90m12:06:50 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m23[0m:[93m5[0m - [91merror[0m[90m TS2304: [0mCannot find name 'SchedulerService'.

[7m23[0m     SchedulerService,
[7m  [0m [91m    ~~~~~~~~~~~~~~~~[0m

[96msrc/mock/mock.module.ts[0m:[93m33[0m:[93m68[0m - [91merror[0m[90m TS2304: [0mCannot find name 'SchedulerService'.

[7m33[0m   exports: [MockDatabaseService, PayoutsService, PositionsService, SchedulerService],
[7m  [0m [91m                                                                   ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/mock-orders.service.ts[0m:[93m154[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'MockOrdersService'.

[7m154[0m           const position = await this.positionsService.createPosition(updatedOrder, product);
[7m   [0m [91m                                      ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:06:50 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:07:04 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/mock-orders.service.ts[0m:[93m154[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'positionsService' does not exist on type 'MockOrdersService'.

[7m154[0m           const position = await this.positionsService.createPosition(updatedOrder, product);
[7m   [0m [91m                                      ~~~~~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:07:04 AM[0m] Found 102 errors. Watching for file changes.

[2J[3J[H[[90m12:07:25 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:07:25 AM[0m] Found 101 errors. Watching for file changes.

[2J[3J[H[[90m12:13:12 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:13:12 AM[0m] Found 101 errors. Watching for file changes.

[2J[3J[H[[90m12:13:25 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.controller.ts[0m:[93m84[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'googleLogin' does not exist on type 'AuthService'.

[7m84[0m     return this.authService.googleLogin(body.token);
[7m  [0m [91m                            ~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:13:25 AM[0m] Found 102 errors. Watching for file changes.

[2J[3J[H[[90m12:14:52 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:14:52 AM[0m] Found 101 errors. Watching for file changes.

[2J[3J[H[[90m12:16:05 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.controller.ts[0m:[93m84[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'googleLogin' does not exist on type 'AuthService'.

[7m84[0m     return this.authService.googleLogin(body.token);
[7m  [0m [91m                            ~~~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:16:05 AM[0m] Found 102 errors. Watching for file changes.

[2J[3J[H[[90m12:16:55 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m361[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m361[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:16:55 AM[0m] Found 101 errors. Watching for file changes.

[2J[3J[H[[90m12:17:13 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:17:13 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:17:21 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:17:21 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:29:18 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:29:18 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:30:13 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:30:13 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:30:14 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:30:14 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:31:52 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:31:52 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:32:05 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:32:05 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:32:13 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:32:13 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:34:14 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:34:14 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:35:44 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:35:44 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:36:55 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:36:55 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:37:02 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:37:02 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:37:08 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:37:08 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:37:16 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:37:16 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:37:42 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:37:42 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:37:49 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:37:49 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:45:16 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:45:17 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:45:36 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/yield-distribution.service.ts[0m:[93m52[0m:[93m32[0m - [91merror[0m[90m TS2304: [0mCannot find name 'BlockchainService'.

[7m52[0m     private blockchainService: BlockchainService,
[7m  [0m [91m                               ~~~~~~~~~~~~~~~~~[0m

[96msrc/payouts/yield-distribution.service.ts[0m:[93m53[0m:[93m30[0m - [91merror[0m[90m TS2304: [0mCannot find name 'DatabaseService'.

[7m53[0m     private databaseService: DatabaseService,
[7m  [0m [91m                             ~~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:45:37 AM[0m] Found 106 errors. Watching for file changes.

[2J[3J[H[[90m12:45:43 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:45:44 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m12:59:02 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m12:59:03 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m1:01:41 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/payouts.controller.ts[0m:[93m96[0m:[93m51[0m - [91merror[0m[90m TS2551: [0mProperty 'generateClaimablePayouts' does not exist on type 'PayoutsService'. Did you mean 'getClaimablePayouts'?

[7m96[0m         const payouts = await this.payoutsService.generateClaimablePayouts(position.id, userId);
[7m  [0m [91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m153[0m:[93m9[0m
    [7m153[0m   async getClaimablePayouts(userId: string): Promise<{
    [7m   [0m [96m        ~~~~~~~~~~~~~~~~~~~[0m
    'getClaimablePayouts' is declared here.

[96msrc/payouts/payouts.controller.ts[0m:[93m162[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'getPositionPayouts' does not exist on type 'PayoutsService'.

[7m162[0m         const payouts = await this.payoutsService.getPositionPayouts(position.id);
[7m   [0m [91m                                                  ~~~~~~~~~~~~~~~~~~[0m

[96msrc/payouts/payouts.controller.ts[0m:[93m230[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'findPayoutById' does not exist on type 'PayoutsService'.

[7m230[0m         this.payoutsService.findPayoutById(id)
[7m   [0m [91m                            ~~~~~~~~~~~~~~[0m

[96msrc/payouts/payouts.controller.ts[0m:[93m250[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'claimMultiplePayouts' does not exist on type 'PayoutsService'.

[7m250[0m       const claimResults = await this.payoutsService.claimMultiplePayouts(payoutIds, userId);
[7m   [0m [91m                                                     ~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/payouts/payouts.controller.ts[0m:[93m283[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'findPayoutById' does not exist on type 'PayoutsService'.

[7m283[0m       const payout = await this.payoutsService.findPayoutById(payoutId);
[7m   [0m [91m                                               ~~~~~~~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:01:41 AM[0m] Found 109 errors. Watching for file changes.

[2J[3J[H[[90m1:01:58 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/payouts.controller.ts[0m:[93m96[0m:[93m51[0m - [91merror[0m[90m TS2551: [0mProperty 'generateClaimablePayouts' does not exist on type 'PayoutsService'. Did you mean 'getClaimablePayouts'?

[7m96[0m         const payouts = await this.payoutsService.generateClaimablePayouts(position.id, userId);
[7m  [0m [91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m154[0m:[93m9[0m
    [7m154[0m   async getClaimablePayouts(userId: string): Promise<{
    [7m   [0m [96m        ~~~~~~~~~~~~~~~~~~~[0m
    'getClaimablePayouts' is declared here.

[96msrc/payouts/payouts.controller.ts[0m:[93m162[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'getPositionPayouts' does not exist on type 'PayoutsService'.

[7m162[0m         const payouts = await this.payoutsService.getPositionPayouts(position.id);
[7m   [0m [91m                                                  ~~~~~~~~~~~~~~~~~~[0m

[96msrc/payouts/payouts.controller.ts[0m:[93m230[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'findPayoutById' does not exist on type 'PayoutsService'.

[7m230[0m         this.payoutsService.findPayoutById(id)
[7m   [0m [91m                            ~~~~~~~~~~~~~~[0m

[96msrc/payouts/payouts.controller.ts[0m:[93m250[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'claimMultiplePayouts' does not exist on type 'PayoutsService'.

[7m250[0m       const claimResults = await this.payoutsService.claimMultiplePayouts(payoutIds, userId);
[7m   [0m [91m                                                     ~~~~~~~~~~~~~~~~~~~~[0m

[96msrc/payouts/payouts.controller.ts[0m:[93m283[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'findPayoutById' does not exist on type 'PayoutsService'.

[7m283[0m       const payout = await this.payoutsService.findPayoutById(payoutId);
[7m   [0m [91m                                               ~~~~~~~~~~~~~~[0m

[96msrc/payouts/payouts.service.ts[0m:[93m85[0m:[93m15[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m85[0m         const payout: MockPayout = {
[7m  [0m [91m              ~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m161[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m161[0m         {
[7m   [0m [91m        ~[0m
[7m162[0m           id: 'payout-001',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m170[0m           updatedAt: new Date('2024-08-25'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m171[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m172[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m172[0m         {
[7m   [0m [91m        ~[0m
[7m173[0m           id: 'payout-002',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m181[0m           updatedAt: new Date('2024-08-24'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m182[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m266[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m266[0m         {
[7m   [0m [91m        ~[0m
[7m267[0m           id: 'payout-001',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m275[0m           updatedAt: new Date('2024-08-25'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m276[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m286[0m:[93m11[0m - [91merror[0m[90m TS2353: [0mObject literal may only specify known properties, and 'claimTxHash' does not exist in type 'MockPayout'.

[7m286[0m           claimTxHash: '0xabcd1234...',
[7m   [0m [91m          ~~~~~~~~~~~[0m

[96msrc/payouts/yield-distribution.service.ts[0m:[93m362[0m:[93m11[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m362[0m     const payout: MockPayout = {
[7m   [0m [91m          ~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:01:59 AM[0m] Found 115 errors. Watching for file changes.

[2J[3J[H[[90m1:02:30 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/payouts.service.ts[0m:[93m85[0m:[93m15[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m85[0m         const payout: MockPayout = {
[7m  [0m [91m              ~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m161[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m161[0m         {
[7m   [0m [91m        ~[0m
[7m162[0m           id: 'payout-001',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m170[0m           updatedAt: new Date('2024-08-25'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m171[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m172[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m172[0m         {
[7m   [0m [91m        ~[0m
[7m173[0m           id: 'payout-002',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m181[0m           updatedAt: new Date('2024-08-24'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m182[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m266[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m266[0m         {
[7m   [0m [91m        ~[0m
[7m267[0m           id: 'payout-001',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m275[0m           updatedAt: new Date('2024-08-25'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m276[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m286[0m:[93m11[0m - [91merror[0m[90m TS2353: [0mObject literal may only specify known properties, and 'claimTxHash' does not exist in type 'MockPayout'.

[7m286[0m           claimTxHash: '0xabcd1234...',
[7m   [0m [91m          ~~~~~~~~~~~[0m

[96msrc/payouts/yield-distribution.service.ts[0m:[93m362[0m:[93m11[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m362[0m     const payout: MockPayout = {
[7m   [0m [91m          ~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:02:30 AM[0m] Found 110 errors. Watching for file changes.

[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDiscoveryModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPositionsModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[MonitoringService] [39m[32mÁõëÊéßÁ≥ªÁªüÂ∑≤ÂêØÂä®[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mScheduleModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mScheduleModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPayoutsModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMonitoringModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +17ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mPositionsController {/api/positions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/user/:userId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/active, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/status, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/redeem, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/payout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/init-test-data, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/google, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mPositionsController {/api/positions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/user/:userId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/active, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/status, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/redeem, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/payout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/init-test-data, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mYieldDistributionController {/api/yield-distribution}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/trigger, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/stats, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/batches, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/batches/:batchId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/today, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/config, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/pause, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/resume, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/failed-tasks, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/retry-failed/:batchId, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/export, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mMonitoringController {/api/monitoring}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/status, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/metrics, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/:alertId/acknowledge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/:alertId/resolve, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/performance, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/realtime, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/health/check, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/events, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/export, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[YieldDistributionService] [39m[32mÊî∂ÁõäÂàÜÂèëËá™Âä®ÂåñÁ≥ªÁªüÂêØÂä®[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[YieldDistributionService] [39m[32mÊ£ÄÊü•Âπ∂ÊÅ¢Â§çÂæÖÂ§ÑÁêÜ‰ªªÂä°[39m
[32m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +7ms[39m
[31m[Nest] 41409  - [39m08/26/2025, 1:02:31 AM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +0ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-val_7e6f88effafabec82ab6d823de011d37/node_modules/@nestjs/platform-express/adapters/express-adapter.js:127:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/nest-application.js:188:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/nest-application.js:178:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m1:02:39 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/payouts.service.ts[0m:[93m85[0m:[93m15[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m85[0m         const payout: MockPayout = {
[7m  [0m [91m              ~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m161[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m161[0m         {
[7m   [0m [91m        ~[0m
[7m162[0m           id: 'payout-001',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m170[0m           updatedAt: new Date('2024-08-25'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m171[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m172[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m172[0m         {
[7m   [0m [91m        ~[0m
[7m173[0m           id: 'payout-002',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m181[0m           updatedAt: new Date('2024-08-24'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m182[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m266[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m266[0m         {
[7m   [0m [91m        ~[0m
[7m267[0m           id: 'payout-001',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m275[0m           updatedAt: new Date('2024-08-25'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m276[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m286[0m:[93m11[0m - [91merror[0m[90m TS2353: [0mObject literal may only specify known properties, and 'claimTxHash' does not exist in type 'MockPayout'.

[7m286[0m           claimTxHash: '0xabcd1234...',
[7m   [0m [91m          ~~~~~~~~~~~[0m

[96msrc/payouts/yield-distribution.service.ts[0m:[93m362[0m:[93m11[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m362[0m     const payout: MockPayout = {
[7m   [0m [91m          ~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:02:40 AM[0m] Found 110 errors. Watching for file changes.

[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDiscoveryModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPositionsModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[MonitoringService] [39m[32mÁõëÊéßÁ≥ªÁªüÂ∑≤ÂêØÂä®[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mScheduleModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mScheduleModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPayoutsModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMonitoringModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +7ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mPositionsController {/api/positions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/user/:userId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/active, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/status, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/redeem, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/payout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/init-test-data, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/google, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mPositionsController {/api/positions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/user/:userId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/active, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/status, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/redeem, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/payout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/init-test-data, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mYieldDistributionController {/api/yield-distribution}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/trigger, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/batches, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/batches/:batchId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/today, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/config, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/pause, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/resume, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/failed-tasks, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/retry-failed/:batchId, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/export, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mMonitoringController {/api/monitoring}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/status, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/metrics, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/:alertId/acknowledge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/:alertId/resolve, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/performance, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/realtime, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/health/check, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/events, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/export, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[YieldDistributionService] [39m[32mÊî∂ÁõäÂàÜÂèëËá™Âä®ÂåñÁ≥ªÁªüÂêØÂä®[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[YieldDistributionService] [39m[32mÊ£ÄÊü•Âπ∂ÊÅ¢Â§çÂæÖÂ§ÑÁêÜ‰ªªÂä°[39m
[32m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +6ms[39m
[31m[Nest] 41476  - [39m08/26/2025, 1:02:40 AM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +1ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-val_7e6f88effafabec82ab6d823de011d37/node_modules/@nestjs/platform-express/adapters/express-adapter.js:127:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/nest-application.js:188:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/nest-application.js:178:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m1:02:47 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/payouts.service.ts[0m:[93m85[0m:[93m15[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m85[0m         const payout: MockPayout = {
[7m  [0m [91m              ~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m161[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m161[0m         {
[7m   [0m [91m        ~[0m
[7m162[0m           id: 'payout-001',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m170[0m           updatedAt: new Date('2024-08-25'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m171[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m172[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m172[0m         {
[7m   [0m [91m        ~[0m
[7m173[0m           id: 'payout-002',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m181[0m           updatedAt: new Date('2024-08-24'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m182[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m266[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m266[0m         {
[7m   [0m [91m        ~[0m
[7m267[0m           id: 'payout-001',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m275[0m           updatedAt: new Date('2024-08-25'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m276[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m286[0m:[93m11[0m - [91merror[0m[90m TS2353: [0mObject literal may only specify known properties, and 'claimTxHash' does not exist in type 'MockPayout'.

[7m286[0m           claimTxHash: '0xabcd1234...',
[7m   [0m [91m          ~~~~~~~~~~~[0m

[96msrc/payouts/yield-distribution.service.ts[0m:[93m362[0m:[93m11[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m362[0m     const payout: MockPayout = {
[7m   [0m [91m          ~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:02:47 AM[0m] Found 110 errors. Watching for file changes.

[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDiscoveryModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPositionsModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[MonitoringService] [39m[32mÁõëÊéßÁ≥ªÁªüÂ∑≤ÂêØÂä®[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mScheduleModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mScheduleModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMonitoringModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPayoutsModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +13ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mPositionsController {/api/positions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/user/:userId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/active, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/status, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/redeem, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/payout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/init-test-data, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/google, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mPositionsController {/api/positions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/user/:userId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/active, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/status, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/redeem, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/payout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/init-test-data, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mPayoutsController {/api/payouts}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/payouts/user/:userId/claimable, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/payouts/user/:userId/history, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/payouts/claim, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/payouts/:payoutId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mYieldDistributionController {/api/yield-distribution}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/trigger, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/batches, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/batches/:batchId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/today, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/config, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/pause, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/resume, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/failed-tasks, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/retry-failed/:batchId, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/export, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mMonitoringController {/api/monitoring}:[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/status, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/metrics, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/:alertId/acknowledge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/:alertId/resolve, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/performance, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/realtime, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/health/check, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/events, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/export, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[YieldDistributionService] [39m[32mÊî∂ÁõäÂàÜÂèëËá™Âä®ÂåñÁ≥ªÁªüÂêØÂä®[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[YieldDistributionService] [39m[32mÊ£ÄÊü•Âπ∂ÊÅ¢Â§çÂæÖÂ§ÑÁêÜ‰ªªÂä°[39m
[32m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +8ms[39m
[31m[Nest] 41525  - [39m08/26/2025, 1:02:48 AM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +1ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-val_7e6f88effafabec82ab6d823de011d37/node_modules/@nestjs/platform-express/adapters/express-adapter.js:127:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/nest-application.js:188:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/nest-application.js:178:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:41:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m1:03:19 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/payouts.service.ts[0m:[93m162[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m162[0m         {
[7m   [0m [91m        ~[0m
[7m163[0m           id: 'payout-001',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m171[0m           updatedAt: new Date('2024-08-25'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m172[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m173[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m173[0m         {
[7m   [0m [91m        ~[0m
[7m174[0m           id: 'payout-002',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m182[0m           updatedAt: new Date('2024-08-24'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m183[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m267[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m267[0m         {
[7m   [0m [91m        ~[0m
[7m268[0m           id: 'payout-001',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m276[0m           updatedAt: new Date('2024-08-25'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m277[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m287[0m:[93m11[0m - [91merror[0m[90m TS2353: [0mObject literal may only specify known properties, and 'claimTxHash' does not exist in type 'MockPayout'.

[7m287[0m           claimTxHash: '0xabcd1234...',
[7m   [0m [91m          ~~~~~~~~~~~[0m

[96msrc/payouts/yield-distribution.service.ts[0m:[93m362[0m:[93m11[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m362[0m     const payout: MockPayout = {
[7m   [0m [91m          ~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:03:19 AM[0m] Found 109 errors. Watching for file changes.

[2J[3J[H[[90m1:03:30 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/payouts.service.ts[0m:[93m269[0m:[93m9[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m269[0m         {
[7m   [0m [91m        ~[0m
[7m270[0m           id: 'payout-001',
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m...[0m 
[7m278[0m           updatedAt: new Date('2024-08-25'),
[7m   [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
[7m279[0m         },
[7m   [0m [91m~~~~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/payouts/payouts.service.ts[0m:[93m289[0m:[93m11[0m - [91merror[0m[90m TS2353: [0mObject literal may only specify known properties, and 'claimTxHash' does not exist in type 'MockPayout'.

[7m289[0m           claimTxHash: '0xabcd1234...',
[7m   [0m [91m          ~~~~~~~~~~~[0m

[96msrc/payouts/yield-distribution.service.ts[0m:[93m362[0m:[93m11[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m362[0m     const payout: MockPayout = {
[7m   [0m [91m          ~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:03:30 AM[0m] Found 107 errors. Watching for file changes.

[2J[3J[H[[90m1:03:40 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/payouts/yield-distribution.service.ts[0m:[93m362[0m:[93m11[0m - [91merror[0m[90m TS2741: [0mProperty 'status' is missing in type '{ id: string; userId: string; positionId: string; amount: number; periodStart: Date; periodEnd: Date; isClaimable: true; createdAt: Date; updatedAt: Date; }' but required in type 'MockPayout'.

[7m362[0m     const payout: MockPayout = {
[7m   [0m [91m          ~~~~~~[0m

  [96msrc/payouts/payouts.service.ts[0m:[93m28[0m:[93m3[0m
    [7m28[0m   status: 'PENDING' | 'CLAIMED' | 'FAILED';
    [7m  [0m [96m  ~~~~~~[0m
    'status' is declared here.

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:03:40 AM[0m] Found 105 errors. Watching for file changes.

[2J[3J[H[[90m1:03:55 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:03:55 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m1:14:12 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:14:13 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m1:14:57 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:14:57 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m1:29:04 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:29:04 AM[0m] Found 104 errors. Watching for file changes.

[2J[3J[H[[90m1:51:11 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/common/filters/global-exception.filter.ts[0m:[93m30[0m:[93m22[0m - [91merror[0m[90m TS2448: [0mBlock-scoped variable 'response' used before its declaration.

[7m30[0m     const response = response as Response;
[7m  [0m [91m                     ~~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m30[0m:[93m11[0m
    [7m30[0m     const response = response as Response;
    [7m  [0m [96m          ~~~~~~~~[0m
    'response' is declared here.

[96msrc/common/filters/global-exception.filter.ts[0m:[93m31[0m:[93m21[0m - [91merror[0m[90m TS2448: [0mBlock-scoped variable 'request' used before its declaration.

[7m31[0m     const request = request as Request;
[7m  [0m [91m                    ~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m31[0m:[93m11[0m
    [7m31[0m     const request = request as Request;
    [7m  [0m [96m          ~~~~~~~[0m
    'request' is declared here.

[96msrc/common/filters/global-exception.filter.ts[0m:[93m89[0m:[93m9[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m89[0m         requestId,
[7m  [0m [91m        ~~~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m20[0m:[93m5[0m
    [7m20[0m     requestId?: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ code: string; message: string; details?: any; timestamp: string; path: string; requestId?: string; }'

[96msrc/common/filters/global-exception.filter.ts[0m:[93m94[0m:[93m47[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m94[0m     this.logError(exception, request, status, requestId);
[7m  [0m [91m                                              ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:51:12 AM[0m] Found 108 errors. Watching for file changes.

[2J[3J[H[[90m1:51:30 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/common/filters/global-exception.filter.ts[0m:[93m30[0m:[93m22[0m - [91merror[0m[90m TS2448: [0mBlock-scoped variable 'response' used before its declaration.

[7m30[0m     const response = response as Response;
[7m  [0m [91m                     ~~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m30[0m:[93m11[0m
    [7m30[0m     const response = response as Response;
    [7m  [0m [96m          ~~~~~~~~[0m
    'response' is declared here.

[96msrc/common/filters/global-exception.filter.ts[0m:[93m31[0m:[93m21[0m - [91merror[0m[90m TS2448: [0mBlock-scoped variable 'request' used before its declaration.

[7m31[0m     const request = request as Request;
[7m  [0m [91m                    ~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m31[0m:[93m11[0m
    [7m31[0m     const request = request as Request;
    [7m  [0m [96m          ~~~~~~~[0m
    'request' is declared here.

[96msrc/common/filters/global-exception.filter.ts[0m:[93m89[0m:[93m9[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m89[0m         requestId,
[7m  [0m [91m        ~~~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m20[0m:[93m5[0m
    [7m20[0m     requestId?: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ code: string; message: string; details?: any; timestamp: string; path: string; requestId?: string; }'

[96msrc/common/filters/global-exception.filter.ts[0m:[93m94[0m:[93m47[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m94[0m     this.logError(exception, request, status, requestId);
[7m  [0m [91m                                              ~~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m56[0m:[93m54[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m56[0m         this.logRequest(request, response, duration, requestId);
[7m  [0m [91m                                                     ~~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m69[0m:[93m13[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m69[0m             requestId,
[7m  [0m [91m            ~~~~~~~~~[0m

  [96msrc/common/interceptors/response.interceptor.ts[0m:[93m25[0m:[93m5[0m
    [7m25[0m     requestId: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ timestamp: string; requestId: string; version: string; }'

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:51:30 AM[0m] Found 110 errors. Watching for file changes.

[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[MockDatabaseService] [39m[32müîÑ Mock Database Service initialized with test data[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHealthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDiscoveryModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPositionsModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[MonitoringService] [39m[32mÁõëÊéßÁ≥ªÁªüÂ∑≤ÂêØÂä®[39m
üèóÔ∏è  API App Module initialized
üåç Environment: development
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[BlockchainService] [39m[32m‚úÖ Treasury contract loaded: 0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[BlockchainService] [39m[32m‚úÖ QACard contract loaded: 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[BlockchainService] [39m[32m‚úÖ USDT contract loaded: 0x5FbDB2315678afecb367f032d93F642f64180aa3[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mScheduleModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mScheduleModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMockModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mBlockchainModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[MockAuthService] [39m[32müîÑ Mock Auth Service initialized with 2 test users[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMonitoringModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPayoutsModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mHealthController {/api/health}:[39m[38;5;3m +19ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/health, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/health/api, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mProductsController {/api/products}:[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, PATCH} route[39m[38;5;3m +1ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/products/:id, DELETE} route[39m[38;5;3m +1ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mOrdersController {/api/orders}:[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/eth, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id/confirm, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/orders/:id, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mPositionsController {/api/positions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/user/:userId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/active, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/status, PATCH} route[39m[38;5;3m +1ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/redeem, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/payout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/init-test-data, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/register, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/challenge, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/wallet/verify, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/google, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/refresh, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/logout, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/me, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/auth/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mPositionsController {/api/positions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/user/:userId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/active, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/status, PATCH} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/redeem, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/:id/payout, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/positions/init-test-data, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mPayoutsController {/api/payouts}:[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/payouts/user/:userId/claimable, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/payouts/user/:userId/history, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/payouts/claim, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/payouts/:payoutId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mYieldDistributionController {/api/yield-distribution}:[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/trigger, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/batches, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/batches/:batchId, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/today, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/config, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/pause, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/resume, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/failed-tasks, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/retry-failed/:batchId, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/yield-distribution/export, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mMonitoringController {/api/monitoring}:[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/status, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/health, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/metrics, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts, GET} route[39m[38;5;3m +6ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/:alertId/acknowledge, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/:alertId/resolve, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/performance, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/realtime, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/alerts/stats, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/health/check, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/events, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/monitoring/export, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[YieldDistributionService] [39m[32mÊî∂ÁõäÂàÜÂèëËá™Âä®ÂåñÁ≥ªÁªüÂêØÂä®[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[YieldDistributionService] [39m[32mÊ£ÄÊü•Âπ∂ÊÅ¢Â§çÂæÖÂ§ÑÁêÜ‰ªªÂä°[39m
[32m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +5ms[39m
[31m[Nest] 79166  - [39m08/26/2025, 1:51:31 AM [31m  ERROR[39m [38;5;3m[NestApplication] [39m[31mError: listen EADDRINUSE: address already in use :::3001[39m[38;5;3m +1ms[39m
node:net:1940
    const ex = new UVExceptionWithHostPort(err, 'listen', address, port);
               ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at Server.listen (node:net:2102:7)
    at ExpressAdapter.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+platform-express@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-val_7e6f88effafabec82ab6d823de011d37/node_modules/@nestjs/platform-express/adapters/express-adapter.js:127:32)
    at /Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/nest-application.js:188:30
    at new Promise (<anonymous>)
    at NestApplication.listen (/Users/zhaoleon/Desktop/QAapp/node_modules/.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/nest-application.js:178:16)
    at async bootstrap (/Users/zhaoleon/Desktop/QAapp/apps/api/src/main.ts:31:3) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3001
}

Node.js v24.4.0
[2J[3J[H[[90m1:51:58 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/common/filters/global-exception.filter.ts[0m:[93m30[0m:[93m22[0m - [91merror[0m[90m TS2448: [0mBlock-scoped variable 'response' used before its declaration.

[7m30[0m     const response = response as Response;
[7m  [0m [91m                     ~~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m30[0m:[93m11[0m
    [7m30[0m     const response = response as Response;
    [7m  [0m [96m          ~~~~~~~~[0m
    'response' is declared here.

[96msrc/common/filters/global-exception.filter.ts[0m:[93m31[0m:[93m21[0m - [91merror[0m[90m TS2448: [0mBlock-scoped variable 'request' used before its declaration.

[7m31[0m     const request = request as Request;
[7m  [0m [91m                    ~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m31[0m:[93m11[0m
    [7m31[0m     const request = request as Request;
    [7m  [0m [96m          ~~~~~~~[0m
    'request' is declared here.

[96msrc/common/filters/global-exception.filter.ts[0m:[93m89[0m:[93m9[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m89[0m         requestId,
[7m  [0m [91m        ~~~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m20[0m:[93m5[0m
    [7m20[0m     requestId?: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ code: string; message: string; details?: any; timestamp: string; path: string; requestId?: string; }'

[96msrc/common/filters/global-exception.filter.ts[0m:[93m94[0m:[93m47[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m94[0m     this.logError(exception, request, status, requestId);
[7m  [0m [91m                                              ~~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m56[0m:[93m54[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m56[0m         this.logRequest(request, response, duration, requestId);
[7m  [0m [91m                                                     ~~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m69[0m:[93m13[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m69[0m             requestId,
[7m  [0m [91m            ~~~~~~~~~[0m

  [96msrc/common/interceptors/response.interceptor.ts[0m:[93m25[0m:[93m5[0m
    [7m25[0m     requestId: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ timestamp: string; requestId: string; version: string; }'

[96msrc/common/pipes/validation.pipe.ts[0m:[93m163[0m:[93m35[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ metatype: Type<any>; }' is not assignable to parameter of type 'ArgumentMetadata'.
  Property 'type' is missing in type '{ metatype: Type<any>; }' but required in type 'ArgumentMetadata'.

[7m163[0m     return super.transform(value, { metatype });
[7m   [0m [91m                                  ~~~~~~~~~~~~[0m

  [96m../../node_modules/.pnpm/@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14.2_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/interfaces/features/pipe-transform.interface.d.ts[0m:[93m15[0m:[93m14[0m
    [7m15[0m     readonly type: Paramtype;
    [7m  [0m [96m             ~~~~[0m
    'type' is declared here.

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:51:58 AM[0m] Found 111 errors. Watching for file changes.

[2J[3J[H[[90m1:52:11 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/common/filters/global-exception.filter.ts[0m:[93m30[0m:[93m22[0m - [91merror[0m[90m TS2448: [0mBlock-scoped variable 'response' used before its declaration.

[7m30[0m     const response = response as Response;
[7m  [0m [91m                     ~~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m30[0m:[93m11[0m
    [7m30[0m     const response = response as Response;
    [7m  [0m [96m          ~~~~~~~~[0m
    'response' is declared here.

[96msrc/common/filters/global-exception.filter.ts[0m:[93m31[0m:[93m21[0m - [91merror[0m[90m TS2448: [0mBlock-scoped variable 'request' used before its declaration.

[7m31[0m     const request = request as Request;
[7m  [0m [91m                    ~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m31[0m:[93m11[0m
    [7m31[0m     const request = request as Request;
    [7m  [0m [96m          ~~~~~~~[0m
    'request' is declared here.

[96msrc/common/filters/global-exception.filter.ts[0m:[93m89[0m:[93m9[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m89[0m         requestId,
[7m  [0m [91m        ~~~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m20[0m:[93m5[0m
    [7m20[0m     requestId?: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ code: string; message: string; details?: any; timestamp: string; path: string; requestId?: string; }'

[96msrc/common/filters/global-exception.filter.ts[0m:[93m94[0m:[93m47[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m94[0m     this.logError(exception, request, status, requestId);
[7m  [0m [91m                                              ~~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m56[0m:[93m54[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m56[0m         this.logRequest(request, response, duration, requestId);
[7m  [0m [91m                                                     ~~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m69[0m:[93m13[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m69[0m             requestId,
[7m  [0m [91m            ~~~~~~~~~[0m

  [96msrc/common/interceptors/response.interceptor.ts[0m:[93m25[0m:[93m5[0m
    [7m25[0m     requestId: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ timestamp: string; requestId: string; version: string; }'

[96msrc/common/pipes/validation.pipe.ts[0m:[93m163[0m:[93m35[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ metatype: Type<any>; }' is not assignable to parameter of type 'ArgumentMetadata'.
  Property 'type' is missing in type '{ metatype: Type<any>; }' but required in type 'ArgumentMetadata'.

[7m163[0m     return super.transform(value, { metatype });
[7m   [0m [91m                                  ~~~~~~~~~~~~[0m

  [96m../../node_modules/.pnpm/@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14.2_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/interfaces/features/pipe-transform.interface.d.ts[0m:[93m15[0m:[93m14[0m
    [7m15[0m     readonly type: Paramtype;
    [7m  [0m [96m             ~~~~[0m
    'type' is declared here.

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:52:11 AM[0m] Found 111 errors. Watching for file changes.

[2J[3J[H[[90m1:52:23 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/common/filters/global-exception.filter.ts[0m:[93m30[0m:[93m22[0m - [91merror[0m[90m TS2448: [0mBlock-scoped variable 'response' used before its declaration.

[7m30[0m     const response = response as Response;
[7m  [0m [91m                     ~~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m30[0m:[93m11[0m
    [7m30[0m     const response = response as Response;
    [7m  [0m [96m          ~~~~~~~~[0m
    'response' is declared here.

[96msrc/common/filters/global-exception.filter.ts[0m:[93m31[0m:[93m21[0m - [91merror[0m[90m TS2448: [0mBlock-scoped variable 'request' used before its declaration.

[7m31[0m     const request = request as Request;
[7m  [0m [91m                    ~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m31[0m:[93m11[0m
    [7m31[0m     const request = request as Request;
    [7m  [0m [96m          ~~~~~~~[0m
    'request' is declared here.

[96msrc/common/filters/global-exception.filter.ts[0m:[93m89[0m:[93m9[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m89[0m         requestId,
[7m  [0m [91m        ~~~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m20[0m:[93m5[0m
    [7m20[0m     requestId?: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ code: string; message: string; details?: any; timestamp: string; path: string; requestId?: string; }'

[96msrc/common/filters/global-exception.filter.ts[0m:[93m94[0m:[93m47[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m94[0m     this.logError(exception, request, status, requestId);
[7m  [0m [91m                                              ~~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m56[0m:[93m54[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m56[0m         this.logRequest(request, response, duration, requestId);
[7m  [0m [91m                                                     ~~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m69[0m:[93m13[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m69[0m             requestId,
[7m  [0m [91m            ~~~~~~~~~[0m

  [96msrc/common/interceptors/response.interceptor.ts[0m:[93m25[0m:[93m5[0m
    [7m25[0m     requestId: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ timestamp: string; requestId: string; version: string; }'

[96msrc/common/pipes/validation.pipe.ts[0m:[93m163[0m:[93m35[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ metatype: Type<any>; }' is not assignable to parameter of type 'ArgumentMetadata'.
  Property 'type' is missing in type '{ metatype: Type<any>; }' but required in type 'ArgumentMetadata'.

[7m163[0m     return super.transform(value, { metatype });
[7m   [0m [91m                                  ~~~~~~~~~~~~[0m

  [96m../../node_modules/.pnpm/@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14.2_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/interfaces/features/pipe-transform.interface.d.ts[0m:[93m15[0m:[93m14[0m
    [7m15[0m     readonly type: Paramtype;
    [7m  [0m [96m             ~~~~[0m
    'type' is declared here.

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:52:23 AM[0m] Found 111 errors. Watching for file changes.

[2J[3J[H[[90m1:52:29 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/common/filters/global-exception.filter.ts[0m:[93m89[0m:[93m9[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m89[0m         requestId,
[7m  [0m [91m        ~~~~~~~~~[0m

  [96msrc/common/filters/global-exception.filter.ts[0m:[93m20[0m:[93m5[0m
    [7m20[0m     requestId?: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ code: string; message: string; details?: any; timestamp: string; path: string; requestId?: string; }'

[96msrc/common/filters/global-exception.filter.ts[0m:[93m94[0m:[93m47[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m94[0m     this.logError(exception, request, status, requestId);
[7m  [0m [91m                                              ~~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m56[0m:[93m54[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m56[0m         this.logRequest(request, response, duration, requestId);
[7m  [0m [91m                                                     ~~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m69[0m:[93m13[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m69[0m             requestId,
[7m  [0m [91m            ~~~~~~~~~[0m

  [96msrc/common/interceptors/response.interceptor.ts[0m:[93m25[0m:[93m5[0m
    [7m25[0m     requestId: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ timestamp: string; requestId: string; version: string; }'

[96msrc/common/pipes/validation.pipe.ts[0m:[93m163[0m:[93m35[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ metatype: Type<any>; }' is not assignable to parameter of type 'ArgumentMetadata'.
  Property 'type' is missing in type '{ metatype: Type<any>; }' but required in type 'ArgumentMetadata'.

[7m163[0m     return super.transform(value, { metatype });
[7m   [0m [91m                                  ~~~~~~~~~~~~[0m

  [96m../../node_modules/.pnpm/@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14.2_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/interfaces/features/pipe-transform.interface.d.ts[0m:[93m15[0m:[93m14[0m
    [7m15[0m     readonly type: Paramtype;
    [7m  [0m [96m             ~~~~[0m
    'type' is declared here.

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:52:30 AM[0m] Found 109 errors. Watching for file changes.

[2J[3J[H[[90m1:52:46 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m56[0m:[93m54[0m - [91merror[0m[90m TS2345: [0mArgument of type 'string | string[]' is not assignable to parameter of type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m56[0m         this.logRequest(request, response, duration, requestId);
[7m  [0m [91m                                                     ~~~~~~~~~[0m

[96msrc/common/interceptors/response.interceptor.ts[0m:[93m69[0m:[93m13[0m - [91merror[0m[90m TS2322: [0mType 'string | string[]' is not assignable to type 'string'.
  Type 'string[]' is not assignable to type 'string'.

[7m69[0m             requestId,
[7m  [0m [91m            ~~~~~~~~~[0m

  [96msrc/common/interceptors/response.interceptor.ts[0m:[93m25[0m:[93m5[0m
    [7m25[0m     requestId: string;
    [7m  [0m [96m    ~~~~~~~~~[0m
    The expected type comes from property 'requestId' which is declared here on type '{ timestamp: string; requestId: string; version: string; }'

[96msrc/common/pipes/validation.pipe.ts[0m:[93m163[0m:[93m35[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ metatype: Type<any>; }' is not assignable to parameter of type 'ArgumentMetadata'.
  Property 'type' is missing in type '{ metatype: Type<any>; }' but required in type 'ArgumentMetadata'.

[7m163[0m     return super.transform(value, { metatype });
[7m   [0m [91m                                  ~~~~~~~~~~~~[0m

  [96m../../node_modules/.pnpm/@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14.2_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/interfaces/features/pipe-transform.interface.d.ts[0m:[93m15[0m:[93m14[0m
    [7m15[0m     readonly type: Paramtype;
    [7m  [0m [96m             ~~~~[0m
    'type' is declared here.

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:52:46 AM[0m] Found 107 errors. Watching for file changes.

[2J[3J[H[[90m1:52:52 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/common/pipes/validation.pipe.ts[0m:[93m163[0m:[93m35[0m - [91merror[0m[90m TS2345: [0mArgument of type '{ metatype: Type<any>; }' is not assignable to parameter of type 'ArgumentMetadata'.
  Property 'type' is missing in type '{ metatype: Type<any>; }' but required in type 'ArgumentMetadata'.

[7m163[0m     return super.transform(value, { metatype });
[7m   [0m [91m                                  ~~~~~~~~~~~~[0m

  [96m../../node_modules/.pnpm/@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14.2_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/interfaces/features/pipe-transform.interface.d.ts[0m:[93m15[0m:[93m14[0m
    [7m15[0m     readonly type: Paramtype;
    [7m  [0m [96m             ~~~~[0m
    'type' is declared here.

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:52:53 AM[0m] Found 105 errors. Watching for file changes.

[2J[3J[H[[90m1:53:01 AM[0m] File change detected. Starting incremental compilation...

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m10[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m10[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m31[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m31[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m53[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m53[0m     await this.database.user.update({
[7m  [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m76[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m76[0m     const existingUser = await this.database.user.findUnique({
[7m  [0m [91m                                             ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m87[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m87[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m98[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m98[0m       const existingWallet = await this.database.wallet.findFirst({
[7m  [0m [91m                                                 ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m111[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m111[0m     const user = await this.database.user.create({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m129[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m129[0m       await this.database.wallet.create({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m193[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m193[0m     let user = await this.database.user.findFirst({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m210[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m210[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m238[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m238[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m263[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m263[0m       const user = await this.database.user.findUnique({
[7m   [0m [91m                                       ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m340[0m:[93m44[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m340[0m       const existing = await this.database.user.findUnique({
[7m   [0m [91m                                           ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m370[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m370[0m     let user = await this.database.user.findUnique({
[7m   [0m [91m                                   ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m379[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m379[0m       user = await this.database.user.create({
[7m   [0m [91m                                 ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m398[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m398[0m     await this.database.user.update({
[7m   [0m [91m                        ~~~~[0m

[96msrc/auth/auth.service.ts[0m:[93m424[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m424[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/auth/decorators/roles.decorator.ts[0m:[93m2[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m2[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/auth/guards/roles.guard.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m3[0m import { UserRole } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m3[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'PrismaClient'.

[7m3[0m import { PrismaClient } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m39[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m39[0m     this.$on('query' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m44[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m44[0m     this.$on('error' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m48[0m     this.$on('info' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m52[0m:[93m10[0m - [91merror[0m[90m TS2339: [0mProperty '$on' does not exist on type 'DatabaseService'.

[7m52[0m     this.$on('warn' as never, (e: any) => {
[7m  [0m [91m         ~~~[0m

[96msrc/database/database.service.ts[0m:[93m59[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$connect' does not exist on type 'DatabaseService'.

[7m59[0m       await this.$connect();
[7m  [0m [91m                 ~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m63[0m:[93m33[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m63[0m       const result = await this.$queryRaw`SELECT 1 as test`;
[7m  [0m [91m                                ~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m72[0m:[93m16[0m - [91merror[0m[90m TS2339: [0mProperty '$disconnect' does not exist on type 'DatabaseService'.

[7m72[0m     await this.$disconnect();
[7m  [0m [91m               ~~~~~~~~~~~[0m

[96msrc/database/database.service.ts[0m:[93m78[0m:[93m18[0m - [91merror[0m[90m TS2339: [0mProperty '$queryRaw' does not exist on type 'DatabaseService'.

[7m78[0m       await this.$queryRaw`SELECT 1`;
[7m  [0m [91m                 ~~~~~~~~~[0m

[96msrc/orders/dto/orders.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m4[0m import { OrderStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m12[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'OrderStatus'.

[7m12[0m import { OrderStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m32[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m32[0m     const product = await this.database.product.findUnique({
[7m  [0m [91m                                        ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m49[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m49[0m       referrer = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m59[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m59[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m69[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m69[0m     const platformFeeConfig = await this.database.systemConfig.findUnique({
[7m  [0m [91m                                                  ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m77[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m77[0m     const order = await this.database.order.create({
[7m  [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m139[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m139[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m175[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m175[0m       const confirmedOrder = await this.database.order.update({
[7m   [0m [91m                                                 ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m216[0m:[93m29[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m216[0m         await this.database.product.update({
[7m   [0m [91m                            ~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m244[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m244[0m       await this.database.order.update({
[7m   [0m [91m                          ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m281[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m281[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m311[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m311[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m376[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m376[0m       this.database.order.findMany({
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m413[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m413[0m       this.database.order.count({ where }),
[7m   [0m [91m                    ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m438[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m438[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m496[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m496[0m     const order = await this.database.order.findFirst({
[7m   [0m [91m                                      ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m518[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'order' does not exist on type 'DatabaseService'.

[7m518[0m     const cancelledOrder = await this.database.order.update({
[7m   [0m [91m                                               ~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m559[0m:[93m42[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m559[0m     const position = await this.database.position.create({
[7m   [0m [91m                                         ~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m592[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m592[0m       const referralRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                               ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m599[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m599[0m       const referralCommission = await this.database.commission.create({
[7m   [0m [91m                                                     ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m616[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'systemConfig' does not exist on type 'DatabaseService'.

[7m616[0m       const agentRate = await this.database.systemConfig.findUnique({
[7m   [0m [91m                                            ~~~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m623[0m:[93m51[0m - [91merror[0m[90m TS2339: [0mProperty 'commission' does not exist on type 'DatabaseService'.

[7m623[0m       const agentCommission = await this.database.commission.create({
[7m   [0m [91m                                                  ~~~~~~~~~~[0m

[96msrc/orders/orders.service.ts[0m:[93m689[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m689[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m46[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m46[0m       this.database.product.findMany({
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m75[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m75[0m       this.database.product.count({ where }),
[7m  [0m [91m                    ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m141[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m141[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m221[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m221[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m242[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m242[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m252[0m:[93m54[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m252[0m       const existingNftProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                     ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m261[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m261[0m     const product = await this.database.product.create({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m302[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m302[0m     const existingProduct = await this.database.product.findUnique({
[7m   [0m [91m                                                ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m312[0m:[93m50[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m312[0m       const symbolConflict = await this.database.product.findUnique({
[7m   [0m [91m                                                 ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m323[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m323[0m       const nftConflict = await this.database.product.findUnique({
[7m   [0m [91m                                              ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m375[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m375[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m400[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m400[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m409[0m:[93m49[0m - [91merror[0m[90m TS2339: [0mProperty 'position' does not exist on type 'DatabaseService'.

[7m409[0m     const activePositions = await this.database.position.count({
[7m   [0m [91m                                                ~~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m420[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m420[0m     const updatedProduct = await this.database.product.update({
[7m   [0m [91m                                               ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m448[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'product' does not exist on type 'DatabaseService'.

[7m448[0m     const product = await this.database.product.findUnique({
[7m   [0m [91m                                        ~~~~~~~[0m

[96msrc/products/products.service.ts[0m:[93m497[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m497[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m         ~~~~~~~~[0m

[96msrc/users/dto/users.dto.ts[0m:[93m4[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m4[0m import { UserRole, KycStatus } from '@prisma/client';
[7m [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.controller.ts[0m:[93m32[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m32[0m import { UserRole } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m10[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'UserRole'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m         ~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m14[0m:[93m20[0m - [91merror[0m[90m TS2305: [0mModule '"@prisma/client"' has no exported member 'KycStatus'.

[7m14[0m import { UserRole, KycStatus } from '@prisma/client';
[7m  [0m [91m                   ~~~~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m26[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m26[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m69[0m:[93m26[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m69[0m     return this.database.user.findUnique({
[7m  [0m [91m                         ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m81[0m     const user = await this.database.user.findUnique({
[7m  [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m139[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m139[0m       this.database.user.findMany({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m178[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m178[0m       this.database.user.count({ where }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m196[0m:[93m46[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m196[0m     const existingUser = await this.database.user.findUnique({
[7m   [0m [91m                                             ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m206[0m:[93m47[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m206[0m       const emailExists = await this.database.user.findUnique({
[7m   [0m [91m                                              ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m227[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m227[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m273[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m273[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m282[0m:[93m48[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m282[0m     const existingWallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m295[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m295[0m       await this.database.wallet.updateMany({
[7m   [0m [91m                          ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m302[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m302[0m     const wallet = await this.database.wallet.create({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m329[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m329[0m     const wallet = await this.database.wallet.findFirst({
[7m   [0m [91m                                       ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m341[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'wallet' does not exist on type 'DatabaseService'.

[7m341[0m     await this.database.wallet.delete({
[7m   [0m [91m                        ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m360[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m360[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m369[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m369[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m405[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m405[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m414[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m414[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m446[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m446[0m     const user = await this.database.user.findUnique({
[7m   [0m [91m                                     ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m455[0m:[93m45[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m455[0m     const updatedUser = await this.database.user.update({
[7m   [0m [91m                                            ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m513[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m513[0m       this.database.user.count(dateFilter.createdAt ? { where: dateFilter } : { where: {} }),
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m514[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m514[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m517[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m517[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m520[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m520[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m523[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m523[0m       this.database.user.count({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m526[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m526[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m531[0m:[93m21[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'DatabaseService'.

[7m531[0m       this.database.user.groupBy({
[7m   [0m [91m                    ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m541[0m:[93m17[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m541[0m       roleStats[role] = 0;
[7m   [0m [91m                ~~~~[0m

[96msrc/users/users.service.ts[0m:[93m550[0m:[93m16[0m - [91merror[0m[90m TS2538: [0mType 'unknown' cannot be used as an index type.

[7m550[0m       kycStats[status] = 0;
[7m   [0m [91m               ~~~~~~[0m

[96msrc/users/users.service.ts[0m:[93m578[0m:[93m27[0m - [91merror[0m[90m TS2339: [0mProperty 'auditLog' does not exist on type 'DatabaseService'.

[7m578[0m       await this.database.auditLog.create({
[7m   [0m [91m                          ~~~~~~~~[0m

[[90m1:53:02 AM[0m] Found 104 errors. Watching for file changes.

