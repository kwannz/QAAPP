# QAapp Nginx 配置文件
# 生产服务器: 45.76.207.177
# 
# 使用说明:
# 1. 将此文件复制到 /etc/nginx/sites-available/qaapp
# 2. 创建软链接: ln -s /etc/nginx/sites-available/qaapp /etc/nginx/sites-enabled/
# 3. 删除默认站点: rm /etc/nginx/sites-enabled/default
# 4. 测试配置: nginx -t
# 5. 重启 Nginx: systemctl reload nginx

# 上游服务器定义
upstream qaapp_api {
    server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream qaapp_web {
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# 限制请求频率
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=web:10m rate=30r/s;

# HTTP 服务器配置
server {
    listen 80;
    server_name 45.76.207.177;  # 可以替换为域名
    
    # 服务器基本配置
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65;
    send_timeout 60s;
    
    # 日志配置
    access_log /var/log/nginx/qaapp_access.log;
    error_log /var/log/nginx/qaapp_error.log;
    
    # 安全头部
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Robots-Tag "noindex, nofollow" always;  # 阻止搜索引擎索引
    
    # Gzip 压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # API 路由配置
    location /api {
        # 限制请求频率
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://qaapp_api;
        proxy_http_version 1.1;
        
        # 连接和超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 请求头设置
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # 缓存和连接管理
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        proxy_request_buffering off;
        
        # CORS 预检请求处理
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # WebSocket 支持 (Socket.IO)
    location /socket.io/ {
        proxy_pass http://qaapp_api;
        proxy_http_version 1.1;
        
        # WebSocket 特定设置
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 超时设置
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        
        # 禁用缓冲
        proxy_buffering off;
    }
    
    # 健康检查路由
    location /health {
        proxy_pass http://qaapp_api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # 静态文件缓存配置
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://qaapp_web;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # 错误处理
        proxy_intercept_errors on;
        error_page 404 = @fallback;
    }
    
    # Next.js 特殊路径
    location /_next/ {
        proxy_pass http://qaapp_web;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # 前端应用主路由
    location / {
        # 限制请求频率
        limit_req zone=web burst=50 nodelay;
        
        proxy_pass http://qaapp_web;
        proxy_http_version 1.1;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 请求头设置
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Next.js 特殊处理
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
        
        # 错误处理
        proxy_intercept_errors on;
        error_page 502 503 504 @maintenance;
    }
    
    # 静态文件回退处理
    location @fallback {
        proxy_pass http://qaapp_web;
    }
    
    # 维护页面
    location @maintenance {
        root /var/www/html;
        try_files /maintenance.html =502;
    }
    
    # 安全配置 - 隐藏敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|config|ini)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 阻止常见攻击路径
    location ~* /(wp-admin|wp-login|xmlrpc|phpmyadmin|admin|administrator) {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
    
    # robots.txt
    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
        access_log off;
        log_not_found off;
    }
    
    # favicon.ico
    location = /favicon.ico {
        proxy_pass http://qaapp_web;
        expires 1d;
        access_log off;
        log_not_found off;
    }
}

# HTTPS 配置模板 (SSL 证书配置后使用)
# server {
#     listen 443 ssl http2;
#     server_name yourdomain.com;
#     
#     # SSL 证书配置
#     ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
#     
#     # SSL 安全配置
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # 其他配置与 HTTP 相同...
# }

# HTTP 重定向到 HTTPS (SSL 配置后启用)
# server {
#     listen 80;
#     server_name yourdomain.com;
#     return 301 https://$server_name$request_uri;
# }